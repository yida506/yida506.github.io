{
    "version": "https://jsonfeed.org/version/1",
    "title": "菜b的爬虫记录 • All posts by \"app基础\" category",
    "description": "",
    "home_page_url": "http://yida506.github.io",
    "items": [
        {
            "id": "http://yida506.github.io/2022/05/09/%E6%8A%93%E5%8C%85%E4%B8%93%E9%A2%98/",
            "url": "http://yida506.github.io/2022/05/09/%E6%8A%93%E5%8C%85%E4%B8%93%E9%A2%98/",
            "title": "抓包专题",
            "date_published": "2022-05-09T14:55:19.000Z",
            "content_html": "<h4 id=\"抓包介绍\"><a class=\"anchor\" href=\"#抓包介绍\">#</a> 抓包介绍</h4>\n<p>本质上抓包就是中间人攻击，让流量先流经代理服务器然后在转发给本机。</p>\n<pre><code>在职\n\n花费时间：10分钟 \n\n感受：整体流程比较清晰,特征工程的注释很详细,直接运行很流畅\n\n缺点: 在做特征工程前,缺乏对整体数据的描述(没解释特征筛选相关的内容)，建议增加可视化的特征展示，以及筛选特征的思路。\n模型训练较单一，缺乏调参的细节以及训练结果的可视化展示，建议增加模型多样性及可视化展示，方便用户对比模型。\n3.2中xunfei_demo中的lightgbm的模型解释只包含一项(理论要素过多，比较适合有基础的)，容易劝退初学者，建议对于模型提供多个链接，让用户自行x\n</code></pre>\n",
            "tags": []
        },
        {
            "id": "http://yida506.github.io/2022/04/23/Android%E5%9F%BA%E7%A1%80/",
            "url": "http://yida506.github.io/2022/04/23/Android%E5%9F%BA%E7%A1%80/",
            "title": "Android基础",
            "date_published": "2022-04-23T14:54:02.000Z",
            "content_html": "<h3 id=\"app介绍\"><a class=\"anchor\" href=\"#app介绍\">#</a> APP 介绍</h3>\n<h5 id=\"hello-world\"><a class=\"anchor\" href=\"#hello-world\">#</a> hello world</h5>\n<p>直接在 android 中创建一个 hello world 项目。</p>\n<p><img data-src=\"Android%E5%9F%BA%E7%A1%80/image-20220425230616509.png\" alt=\"image-20220425230616509\"></p>\n<p>可以看到包含很多内容，这里的 java 里面有一个应用名称目录，其中包含了 MainActivity,</p>\n<p>Android 项目的资源会被存储在 res 文件夹中。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>myapplication</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">androidx<span class=\"token punctuation\">.</span>appcompat<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AppCompatActivity</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bundle</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainActivity</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AppCompatActivity</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">setContentView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span>activity_main<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 MainActivity 中，基础了一个基础的 Activity 类，然后又重写了这个 onCreate 方法，最后设置了 layout.activity_main 为 View.</p>\n<p><img data-src=\"Android%E5%9F%BA%E7%A1%80/image-20220425232435459.png\" alt=\"image-20220425232435459\"></p>\n<p>这里编写了 hello world 然后渲染到了 app 主界面上.</p>\n<h6 id=\"点击事件添加\"><a class=\"anchor\" href=\"#点击事件添加\">#</a> 点击事件添加</h6>\n<p>直接修改 TextView 为 Button, 然后添加 id 属性 (&quot;@+id/check&quot;) 即可。</p>\n<p>然后在 MainActivity 中添加如下代码，绑定 button 按钮并添加事件</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Button</span> bt_check <span class=\"token operator\">=</span> <span class=\"token function\">findViewById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        bt_check<span class=\"token punctuation\">.</span><span class=\"token function\">setOnClickListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">View<span class=\"token punctuation\">.</span>OnClickListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">View</span> view<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rousue\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello world from button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"Android%E5%9F%BA%E7%A1%80/image-20220426231939847.png\" alt=\"image-20220426231939847\"></p>\n<p>这样一来每次点击在后台返回了日志。</p>\n<h6 id=\"android组成部分\"><a class=\"anchor\" href=\"#android组成部分\">#</a> Android 组成部分</h6>\n<ul>\n<li>Activity 表示层 展示 UI，响应用户动作</li>\n<li>Service 更新数据源和 Activity</li>\n<li>Content Provider 数据储存器</li>\n<li>Intent 消息传递框架</li>\n<li>Broadcast Receiver Intet 监听器</li>\n<li>Widget 可视化组件</li>\n<li>Notification 向用户发起信号</li>\n</ul>\n<blockquote>\n<p>Manifest 存储在最底层，定义应用程序的组件和需求的结构和元数据。</p>\n</blockquote>\n<h5 id=\"activity\"><a class=\"anchor\" href=\"#activity\">#</a> Activity</h5>\n<p>该类为所有用户界面的基础。</p>\n<p>每一个 Activity 都表示一个屏幕，类似 web 中的 html</p>\n<h4 id=\"andriod库\"><a class=\"anchor\" href=\"#andriod库\">#</a> Andriod 库</h4>\n<h6 id=\"okhttp3\"><a class=\"anchor\" href=\"#okhttp3\">#</a> okhttp3:</h6>\n<p>网络请求相关 (类似 requests)</p>\n<h6 id=\"retrofit\"><a class=\"anchor\" href=\"#retrofit\">#</a> retrofit:</h6>\n<p>网络请求相关</p>\n<h6 id=\"rxjava\"><a class=\"anchor\" href=\"#rxjava\">#</a> rxjava:</h6>\n<p>与 retrofit 结合使用</p>\n<h6 id=\"gson\"><a class=\"anchor\" href=\"#gson\">#</a> gson:</h6>\n<p>序列化</p>\n<h3 id=\"android开发\"><a class=\"anchor\" href=\"#android开发\">#</a> Android 开发</h3>\n<h4 id=\"step1\"><a class=\"anchor\" href=\"#step1\">#</a> Step1</h4>\n<h6 id=\"intent\"><a class=\"anchor\" href=\"#intent\">#</a> intent</h6>\n<p>主要用于组件之间的传输，类似从一个 activity 到另一个 activity。</p>\n<p>要实现这种传输，需要实例化 intent 对象。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">setOnClickListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">View<span class=\"token punctuation\">.</span>OnClickListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">View</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"被点击了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"onClick: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token comment\">// 实例化 intentd</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token class-name\">Intent</span> intent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">SecondActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span>intent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": []
        }
    ]
}