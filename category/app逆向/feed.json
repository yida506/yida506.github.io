{
    "version": "https://jsonfeed.org/version/1",
    "title": "菜b的爬虫记录 • All posts by \"app逆向\" category",
    "description": "",
    "home_page_url": "http://yida506.github.io",
    "items": [
        {
            "id": "http://yida506.github.io/2022/05/14/unidbg/",
            "url": "http://yida506.github.io/2022/05/14/unidbg/",
            "title": "unidbg",
            "date_published": "2022-05-14T11:34:31.000Z",
            "content_html": "<h4 id=\"前提纪要\"><a class=\"anchor\" href=\"#前提纪要\">#</a> 前提纪要</h4>\n<p>在 app 加密中，加密逻辑不单单出现在 java 方法中，也有可能出现在 native 方法中，wiki 中介绍，java native interface 是能将 java 代码运行在 jvm 同时可以让其他语言类似 C,C++ 本机调用的方法。</p>\n<p>同时，在 java 代码中会以如下方式出现：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 加载库</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadLibrary</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token namespace\">o00OO<span class=\"token punctuation\">.</span></span>OooO00o<span class=\"token punctuation\">.</span>OooO00o</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">592843821021945178L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 加载 Native 方法</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">native</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sign</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"unidbg介绍\"><a class=\"anchor\" href=\"#unidbg介绍\">#</a> Unidbg 介绍</h4>\n<p>unidbg 是一个基于 unicorn 的逆向工具，可以直接调用 Android 和 iOS 中的  <code>so</code>  文件。项目的 GitHub 地址为 https://github.com/zhkl0228/unidbg。</p>\n<p>本质上是 java 可以调用 c 中的方法，那么只要模拟其方法即可。</p>\n",
            "tags": []
        },
        {
            "id": "http://yida506.github.io/2022/05/03/Ratel/",
            "url": "http://yida506.github.io/2022/05/03/Ratel/",
            "title": "Ratel",
            "date_published": "2022-05-03T06:09:45.000Z",
            "content_html": "<h4 id=\"ratel介绍\"><a class=\"anchor\" href=\"#ratel介绍\">#</a> Ratel 介绍</h4>\n<p>直接 adb install 安装。</p>\n<h6 id=\"app感染\"><a class=\"anchor\" href=\"#app感染\">#</a> app 感染：</h6>\n<p>使用 ratel.bat + app 包名 生成被感染的 app</p>\n<h6 id=\"ratel插件开发\"><a class=\"anchor\" href=\"#ratel插件开发\">#</a> Ratel 插件开发</h6>\n<p>模板地址  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZpcmphclJhdGVsL3JhdGVsLW1vZHVsZS10ZW1wbGF0ZS5naXQ=\">https://github.com/virjarRatel/ratel-module-template.git</span></p>\n<p>直接使用模板创建</p>\n<p>template.bat -a package&lt;name&gt; -m dir&lt;name&gt;</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleLoadPackage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">RC_LoadPackage<span class=\"token punctuation\">.</span>LoadPackageParam</span> lpparam<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">,</span> <span class=\"token string\">\"hook begin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">,</span> <span class=\"token string\">\"current pacakage name : \"</span> <span class=\"token operator\">+</span> lpparam<span class=\"token punctuation\">.</span>packageName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">//lpparam.packageName 可以输出包名，如果要针包 hook, 就需要 z</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lpparam<span class=\"token punctuation\">.</span>packageName<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.example.myapplication\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">,</span> <span class=\"token string\">\"current is in app package\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">addFloatingButtonForActivity</span><span class=\"token punctuation\">(</span>lpparam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">,</span> <span class=\"token string\">\"hook end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://yida506.github.io/2022/04/23/Android%E5%9F%BA%E7%A1%80/",
            "url": "http://yida506.github.io/2022/04/23/Android%E5%9F%BA%E7%A1%80/",
            "title": "Android基础",
            "date_published": "2022-04-23T14:54:02.000Z",
            "content_html": "<h3 id=\"app介绍\"><a class=\"anchor\" href=\"#app介绍\">#</a> APP 介绍</h3>\n<h5 id=\"hello-world\"><a class=\"anchor\" href=\"#hello-world\">#</a> hello world</h5>\n<p>直接在 android 中创建一个 hello world 项目。</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/Android%E5%9F%BA%E7%A1%80/image-20220425230616509.png\" alt=\"image-20220425230616509\"></p>\n<p>可以看到包含很多内容，这里的 java 里面有一个应用名称目录，其中包含了 MainActivity,</p>\n<p>Android 项目的资源会被存储在 res 文件夹中。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>myapplication</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">androidx<span class=\"token punctuation\">.</span>appcompat<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AppCompatActivity</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bundle</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainActivity</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AppCompatActivity</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">setContentView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span>activity_main<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 MainActivity 中，基础了一个基础的 Activity 类，然后又重写了这个 onCreate 方法，最后设置了 layout.activity_main 为 View.</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/Android%E5%9F%BA%E7%A1%80/image-20220425232435459.png\" alt=\"image-20220425232435459\"></p>\n<p>这里编写了 hello world 然后渲染到了 app 主界面上.</p>\n<h6 id=\"点击事件添加\"><a class=\"anchor\" href=\"#点击事件添加\">#</a> 点击事件添加</h6>\n<p>直接修改 TextView 为 Button, 然后添加 id 属性 (&quot;@+id/check&quot;) 即可。</p>\n<p>然后在 MainActivity 中添加如下代码，绑定 button 按钮并添加事件</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Button</span> bt_check <span class=\"token operator\">=</span> <span class=\"token function\">findViewById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        bt_check<span class=\"token punctuation\">.</span><span class=\"token function\">setOnClickListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">View<span class=\"token punctuation\">.</span>OnClickListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">View</span> view<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rousue\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello world from button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/Android%E5%9F%BA%E7%A1%80/image-20220426231939847.png\" alt=\"image-20220426231939847\"></p>\n<p>这样一来每次点击在后台返回了日志。</p>\n<h6 id=\"android组成部分\"><a class=\"anchor\" href=\"#android组成部分\">#</a> Android 组成部分</h6>\n<ul>\n<li>Activity 表示层 展示 UI，响应用户动作</li>\n<li>Service 更新数据源和 Activity</li>\n<li>Content Provider 数据储存器</li>\n<li>Intent 消息传递框架</li>\n<li>Broadcast Receiver Intet 监听器</li>\n<li>Widget 可视化组件</li>\n<li>Notification 向用户发起信号</li>\n</ul>\n<blockquote>\n<p>Manifest 存储在最底层，定义应用程序的组件和需求的结构和元数据。</p>\n</blockquote>\n<h5 id=\"activity\"><a class=\"anchor\" href=\"#activity\">#</a> Activity</h5>\n<p>该类为所有用户界面的基础。</p>\n<p>每一个 Activity 都表示一个屏幕，类似 web 中的 html</p>\n<h4 id=\"andriod库\"><a class=\"anchor\" href=\"#andriod库\">#</a> Andriod 库</h4>\n<h6 id=\"okhttp3\"><a class=\"anchor\" href=\"#okhttp3\">#</a> okhttp3:</h6>\n<p>网络请求相关 (类似 requests)</p>\n<h6 id=\"retrofit\"><a class=\"anchor\" href=\"#retrofit\">#</a> retrofit:</h6>\n<p>网络请求相关</p>\n<h6 id=\"rxjava\"><a class=\"anchor\" href=\"#rxjava\">#</a> rxjava:</h6>\n<p>与 retrofit 结合使用</p>\n<h6 id=\"gson\"><a class=\"anchor\" href=\"#gson\">#</a> gson:</h6>\n<p>序列化</p>\n<h3 id=\"android开发\"><a class=\"anchor\" href=\"#android开发\">#</a> Android 开发</h3>\n<h4 id=\"step1\"><a class=\"anchor\" href=\"#step1\">#</a> Step1</h4>\n<h6 id=\"intent\"><a class=\"anchor\" href=\"#intent\">#</a> intent</h6>\n<p>主要用于组件之间的传输，类似从一个 activity 到另一个 activity。</p>\n<p>要实现这种传输，需要实例化 intent 对象。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">setOnClickListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">View<span class=\"token punctuation\">.</span>OnClickListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">View</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"被点击了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"onClick: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token comment\">// 实例化 intentd</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token class-name\">Intent</span> intent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">SecondActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span>intent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://yida506.github.io/2022/04/21/Frida/",
            "url": "http://yida506.github.io/2022/04/21/Frida/",
            "title": "Frida",
            "date_published": "2022-04-21T11:51:59.000Z",
            "content_html": "<h4 id=\"frida基础\"><a class=\"anchor\" href=\"#frida基础\">#</a> Frida 基础</h4>\n<h5 id=\"启动\"><a class=\"anchor\" href=\"#启动\">#</a> 启动</h5>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb shell</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token function\">su</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token builtin class-name\">cd</span> /data/local/tmp/</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token function\">chmod</span> <span class=\"token number\">777</span> 对应frida-serve的名字</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> ./对应frida-serve的名字+<span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>//cmd 端口转发</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>adb forward tcp:27043 tcp:27043</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>adb forward tcp:27042 tcp:27042</pre></td></tr></table></figure><h5 id=\"hook\"><a class=\"anchor\" href=\"#hook\">#</a> HOOK</h5>\n<h6 id=\"python\"><a class=\"anchor\" href=\"#python\">#</a> python</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># -*- coding: utf-8 -*-</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>@author: lan</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>@contact: </pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>@Created on: 2022/4/20 19:54</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\"\"\"</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> frida</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">on_message</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> message<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'send'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[*] &#123;0&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">[</span><span class=\"token string\">'payload'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>test_signature <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tjs代码</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>'''</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 启动方式 1 attachH 后跟进程名</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>process <span class=\"token operator\">=</span> frida<span class=\"token punctuation\">.</span>get_usb_device<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span><span class=\"token string\">'com.chaozhuo.texteditor'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>script <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>create_script<span class=\"token punctuation\">(</span>test_signature<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>script<span class=\"token punctuation\">.</span>on<span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> on_message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>script<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>本质上写 Js 代码即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>process <span class=\"token operator\">=</span> frida<span class=\"token punctuation\">.</span>get_usb_device<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>enumerate_processes<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#可以查看当前运行的进程名</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>也可以直接 adb 查看进程，这里条件可以任意，为 com.xxx 皆可，目的是缩小范围.</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb shell <span class=\"token string\">\"ps | grep 条件\"</span></pre></td></tr></table></figure><h6 id=\"重载的代码hook\"><a class=\"anchor\" href=\"#重载的代码hook\">#</a> 重载的代码 hook</h6>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/Frida/image-20220423112839478.png\" alt=\"image-20220423112839478\"></p>\n<p>以该处为例，该类中有两个 a 方法，我们只想 hook 上面一个，直接写就会报错。</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/Frida/image-20220423113034693.png\" alt=\"image-20220423113034693\"></p>\n<p>这样，我们只需要等他报错后，修改代码即可。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 加上.overload ('a.u$a')</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Signature<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">overload</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a.u$a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'enter a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">a</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>以上是对于调用的函数进行 hook，得到的，还有一种情况，就是方法没有被调用，我们想查看他的方法，拿到其结果，那么我们可以采用 Java.choose (类名 + 回调)。</p>\n<h6 id=\"js\"><a class=\"anchor\" href=\"#js\">#</a> js</h6>\n<p>也可以考虑直接编写 js 脚本进行 frida.</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>// 打印出当前手机上的进程</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>frida-ps -Ua</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//后面的是进程名，只需要在jsl</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>frida -U -l test.js com.example.simpleencryption</pre></td></tr></table></figure><h5 id=\"root检测\"><a class=\"anchor\" href=\"#root检测\">#</a> root 检测</h5>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">showStacks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Java<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.util.Log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getStackTraceString</span><span class=\"token punctuation\">(</span>Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.lang.Exception\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>$<span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">hook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Java<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">const</span> commonPaths <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token string\">\"/data/local/bin/su\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token string\">\"/data/local/su\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token string\">\"/data/local/xbin/su\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token string\">\"/dev/com.koushikdutta.superuser.daemon/\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token string\">\"/sbin/su\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token string\">\"/system/app/Superuser.apk\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token string\">\"/system/bin/failsafe/su\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token string\">\"/system/bin/su\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token string\">\"/system/etc/init.d/99SuperSUDaemon\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token string\">\"/system/sd/xbin/su\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token string\">\"/system/xbin/busybox\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token string\">\"/system/xbin/daemonsu\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token string\">\"/system/xbin/su\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">var</span> JavaString <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.lang.String\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        JavaString<span class=\"token punctuation\">.</span>contains<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">!==</span> <span class=\"token string\">\"test-keys\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">var</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"JavaString\"</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token keyword\">var</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">return</span> ret</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">var</span> JavaRuntime <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.lang.Runtime\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">var</span> iOException <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.io.IOException\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        JavaRuntime<span class=\"token punctuation\">.</span>exec<span class=\"token punctuation\">.</span><span class=\"token function\">overload</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.lang.String\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">command</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"su\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                ret <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"JavaRuntime\"</span> <span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">,</span>ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                <span class=\"token keyword\">throw</span> iOException<span class=\"token punctuation\">.</span>$<span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hacker\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token keyword\">var</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"JavaRuntime2\"</span> <span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">,</span>ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">var</span> JavaFile <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.io.File\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        JavaFile<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">const</span> filename <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAbsolutePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>commonPaths<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token keyword\">var</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"JavaFile\"</span><span class=\"token punctuation\">,</span>filename<span class=\"token punctuation\">,</span>ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token keyword\">var</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token function\">setImmediate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>hook<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"objection\"><a class=\"anchor\" href=\"#objection\">#</a> Objection</h4>\n<p>Objection 本质上是 frida 的一种工具实现，可以通过命令行输出，实现 frida 交互过程，达到类调用，hook 的目的。</p>\n<h6 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h6>\n<p>由于 frida 版本是 14.1.3，直接 pip install objection 即可</p>\n<h6 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h6>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>// 注入代码</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>objection -g 进程名 explore  --startup-command <span class=\"token string\">\"android root disable\"</span> <span class=\"token operator\">&lt;</span>在启动前注入命令<span class=\"token operator\">></span></pre></td></tr></table></figure><ol>\n<li>寻找包名 frida-ps -U | grep 参数</li>\n<li>Objection 注入</li>\n<li>android hooking search classes [类名]</li>\n<li>android hooking search methods &lt;key&gt;[关键词] (从所有内存中加载)</li>\n<li>android hooking list class methods 包名 + 类名 (列出所有的方法)</li>\n<li>android hooking list 组件</li>\n<li>android hooking watch class_method &lt;methodName&gt;(hook 指定方法) --dump-args --dump-backtrace --dump-return</li>\n<li>jobs list (查看作业，显示 hook 的函数的信息)</li>\n<li>job kill &lt;id&gt; 删除作业</li>\n</ol>\n<blockquote>\n<p>如果要 hook 构造方法 需要使用 $init</p>\n</blockquote>\n",
            "tags": []
        },
        {
            "id": "http://yida506.github.io/2022/04/19/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/",
            "url": "http://yida506.github.io/2022/04/19/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/",
            "title": "静态分析",
            "date_published": "2022-04-19T13:44:34.000Z",
            "content_html": "<h4 id=\"jadx使用\"><a class=\"anchor\" href=\"#jadx使用\">#</a> jadx 使用</h4>\n<p>直接用 jadx 打开 apk。</p>\n<h4 id=\"静态分析\"><a class=\"anchor\" href=\"#静态分析\">#</a> 静态分析</h4>\n<h5 id=\"1代码搜索\"><a class=\"anchor\" href=\"#1代码搜索\">#</a> 1. 代码搜索</h5>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/image-20220419214843370.png\" alt=\"image-20220419214843370\"></p>\n<p>activity 里面包含主要代码。其中在 main 之前的为主界面代码，这里只有 mainActivity.</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/image-20220419215044951.png\" alt=\"image-20220419215044951\"></p>\n<p>onCreate、onClick 为事件。</p>\n<h4 id=\"frida\"><a class=\"anchor\" href=\"#frida\">#</a> Frida</h4>\n<h5 id=\"启动\"><a class=\"anchor\" href=\"#启动\">#</a> 启动：</h5>\n<p>连接到手机后，进入安装 frida-serve 的位置</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb shell</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token function\">su</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token builtin class-name\">cd</span> /data/local/tmp/</pre></td></tr></table></figure><p>ps -A | grep com</p>\n<p>com 指代的是过滤条件，该指令可以展示当前进程名，也对应下图 xml 中的 package 名。</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/image-20220419221411727.png\" alt=\"image-20220419221411727\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> frida</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#模板</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">on_message</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> message<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'send'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[*] &#123;0&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">[</span><span class=\"token string\">'payload'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#这里写要 hook 代码</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>test_t<span class=\"token operator\">=</span><span class=\"token triple-quoted-string string\">'''</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Java.perform(</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    function()&#123;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        var MainActivity = Java.use('com.example.seccon2015.rock_paper_scissors.MainActivity')</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        MainActivity.onClick.implementation = function(val)&#123;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            console.log('mmmm:'+this.m.value);</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            console.log(this.n.value);</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            this.onClick(val);</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        &#125;;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        #下面是匿名类的hook方法,这里要把他自带的.改为$</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>         var test = Java.use('com.example.seccon2015.rock_paper_scissors.MainActivity$1')</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        test.run.implementation = function()&#123;</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            console.log('this is test');</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            this.run();</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>)</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>'''</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">#模板</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">#启动方式 1 attachH 后跟进程名</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>process <span class=\"token operator\">=</span> frida<span class=\"token punctuation\">.</span>get_usb_device<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span><span class=\"token string\">'com.example.seccon2015.rock_paper_scissors'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>script <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>create_script<span class=\"token punctuation\">(</span>test_t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>script<span class=\"token punctuation\">.</span>on<span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> on_message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>script<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>匿名类可以通过 smali 代码判断。</p>\n<p>在匿名函数访问外部类：<br>\nthis.this$0.value.xxx.value</p>\n<pre><code>\n#打印调用堆栈\nfunction printstack()&#123;\n    console.log(Java.use(&quot;android.util.Log&quot;).getStackTraceString(Java.use(&quot;java.lang.Exception&quot;).$new()));\n&#125;\n</code></pre>\n",
            "tags": []
        },
        {
            "id": "http://yida506.github.io/2022/04/03/app%E5%85%A5%E9%97%A8/",
            "url": "http://yida506.github.io/2022/04/03/app%E5%85%A5%E9%97%A8/",
            "title": "app入门",
            "date_published": "2022-04-03T13:43:10.000Z",
            "content_html": "<h4 id=\"刷机\"><a class=\"anchor\" href=\"#刷机\">#</a> 刷机</h4>\n<p>手机选择 nexus 5</p>\n<h6 id=\"刷机包下载不同手机有不同的镜像\"><a class=\"anchor\" href=\"#刷机包下载不同手机有不同的镜像\">#</a> 刷机包下载 (不同手机有不同的镜像)：</h6>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vYW5kcm9pZC9pbWFnZXMjYnVsbGhlYWQ=\">https://developers.google.com/android/images#bullhead</span></p>\n<p>选择版本 OPM1.171019.011, Dec 2017</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2UuYW5kcm9pZC5jb20vc2V0dXAvc3RhcnQvYnVpbGQtbnVtYmVycyNzb3VyY2UtY29kZS10YWdzLWFuZC1idWlsZHM=\">https://source.android.com/setup/start/build-numbers#source-code-tags-and-builds</span></p>\n<blockquote>\n<p>pixel 8.0.0 貌似会使得后面用 frida 有小问题</p>\n</blockquote>\n<h6 id=\"电脑驱动更新\"><a class=\"anchor\" href=\"#电脑驱动更新\">#</a> 电脑驱动更新</h6>\n<p>**win10 需要更新 google usb driver **</p>\n<blockquote>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/app%E5%85%A5%E9%97%A8/image-20220417122821654.png\" alt=\"image-20220417122821654\"></p>\n</blockquote>\n<p>然后到 bootloader 界面直接运行</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/app%E5%85%A5%E9%97%A8/image-20220417135832286.png\" alt=\"image-20220417135832286\"></p>\n<p>即可</p>\n<p>时间同步</p>\n<pre><code>adb shell settings put global captive_portal_http_url https://www.google.cn/generate_204\n\nadb shell settings put global captive_portal_https_url https://www.google.cn/generate_204\n\nadb shell settings put global global ntp_server 1.hk.pool.ntp.org\n\n adb shell reboot\n</code></pre>\n<h4 id=\"root\"><a class=\"anchor\" href=\"#root\">#</a> ROOT</h4>\n<p>去下一个 TWRP 镜像，</p>\n<p>然后用 fastboot falsh  recovery twrp 镜像推送镜像 ，然后从 bootloaders 界面进去 recovery 分区，安装 twrp</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RvcGpvaG53dS9NYWdpc2svcmVsZWFzZXMvdGFnL3YyMC40\">https://github.com/topjohnwu/Magisk/releases/tag/v20.4</span></p>\n<blockquote>\n<p>nexus5 和 pixel2 xl 的方式不同，pixel2 不自带 recovery 分区，需要先刷临时分区。</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>// 刷入临时镜像</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fastboot flash boot twrp-3.6.0_9-0-taimen.img</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//重启后进入twrp</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>fastboot <span class=\"token function\">reboot</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>adb push twrp-installer-3.6.0_9-0-taimen.zip /sdcard/</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>adb push Magisk-v20.4.zip /sdcard/</pre></td></tr></table></figure><p>下载 magisk 包</p>\n<p>然后通过 adb push Magisk-v20.4.zip/sdcard/ 推送到手机上</p>\n<p>这里 sdcard 指代的是默认目录。</p>\n<p>然后通过 twrp 的 install 找到传输过来的 zip 进行安装。</p>\n<blockquote>\n<p>对于 pxel 需要安装完永久的 twrp 后，点击上面的按钮在安装 magisk</p>\n</blockquote>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/app%E5%85%A5%E9%97%A8/image-20220417144216066.png\" alt=\"image-20220417144216066\"></p>\n<p>adb shell 连接手机，su 是进入 root 权限.</p>\n<blockquote>\n<p>pixel2 分区在输入 magisk 时貌似有兼容错误，</p>\n<p>adb sideload Magisk-v20.0.zip。</p>\n</blockquote>\n<h4 id=\"frida安装\"><a class=\"anchor\" href=\"#frida安装\">#</a> Frida 安装</h4>\n<h5 id=\"frida-serve安装\"><a class=\"anchor\" href=\"#frida-serve安装\">#</a> frida-serve 安装</h5>\n<p>下载对应版本的 frida-serve (14.1.3)</p>\n<h5 id=\"电脑端\"><a class=\"anchor\" href=\"#电脑端\">#</a> 电脑端</h5>\n<p>直接 pip 安装 有点慢 会卡在 setup 处</p>\n<p>然后安装 frida-tools 版本要对应</p>\n<p>接着暗转 frida-server push 到手机上</p>\n",
            "tags": []
        }
    ]
}