{
    "version": "https://jsonfeed.org/version/1",
    "title": "菜b的爬虫记录 • All posts by \"验证码专题\" category",
    "description": "",
    "home_page_url": "http://yida506.github.io",
    "items": [
        {
            "id": "http://yida506.github.io/2022/01/22/sm%E6%BB%91%E5%9D%97/",
            "url": "http://yida506.github.io/2022/01/22/sm%E6%BB%91%E5%9D%97/",
            "title": "sm滑块",
            "date_published": "2022-01-21T16:12:58.000Z",
            "content_html": "<h4 id=\"sm滑块\"><a class=\"anchor\" href=\"#sm滑块\">#</a> sm 滑块</h4>\n<h5 id=\"受害对象网址滑块验证-xiaohongshucom\"><a class=\"anchor\" href=\"#受害对象网址滑块验证-xiaohongshucom\">#</a> 受害对象网址:\t<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueGlhb2hvbmdzaHUuY29tL3dlYi1sb2dpbi9jYXB0Y2hhP3JlZGlyZWN0UGF0aD1odHRwJTNBJTJGJTJGd3d3LnhpYW9ob25nc2h1LmNvbSUyRmRpc2NvdmVyeSUyRml0ZW0lMkY2MDVlYjQ5MjAwMDAwMDAwMjEwMzZhYjU=\">滑块验证 (xiaohongshu.com)</span></h5>\n<h6 id=\"step1-网站请求分析-s\"><a class=\"anchor\" href=\"#step1-网站请求分析-s\">#</a> STEP1 网站请求分析:  s</h6>\n<p><img data-src=\"sm%E6%BB%91%E5%9D%97/image-20220122001607774.png\" alt=\"image-20220122001607774\"></p>\n<p>加载内容如下:</p>\n<ol>\n<li>加载 HTML (这一部分会 set-cookie 发送 304 请求)，加载一部分 js、css</li>\n<li>发送第一个 web?callback 请求</li>\n<li>发送 conf?callback 请求</li>\n<li>在加载一部分 js</li>\n<li>发送 register 请求</li>\n</ol>\n<blockquote>\n<p>这里发送 register 请求后就拿到了滑块背景以及滑块、同时观察，貌似只有个携带时间戳的参数，以及 organization，</p>\n<p>经测试，register 请求可以直接请求，但是每次请求返回的结果都不一样，</p>\n</blockquote>\n<h6 id=\"step2-滑块分析\"><a class=\"anchor\" href=\"#step2-滑块分析\">#</a> STEP2 滑块分析</h6>\n<p><img data-src=\"sm%E6%BB%91%E5%9D%97/image-20220122002747400.png\" alt=\"image-20220122002747400\"></p>\n<p>这里采用倒推分析的方式，对网站进行分析。</p>\n<p>从流程上来看，fverify 是通过一系列参数，返回了一个 success, 然后 captcha 这个请求，返回了一个 fail，因为我们这里是刻意的滑的失败的，那么可以推断出这个接口是对滑块的判断。但是观察 fverify 的请求，里面返回了一个 reject，是拒绝的意思，同时通过堆栈分析，我们发现这个参数其实就 fail 其实一开始貌似就返回了。无论如何，这玩意都指向了 captcha 这段被混淆的 js 文件中。</p>\n<h6 id=\"step3-ast反混淆\"><a class=\"anchor\" href=\"#step3-ast反混淆\">#</a> STEP3 AST 反混淆</h6>\n<p>放入在线网站解析，随便解一下就可以看了。</p>\n<h6 id=\"step4-参数分析\"><a class=\"anchor\" href=\"#step4-参数分析\">#</a> STEP4 参数分析</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token comment\"># 动</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token string\">\"rid\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"20220225200442d1ad44e138bff05707\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token string\">\"callback\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"sm_1645791947136\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\"># 定</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token string\">\"je\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"J95iyFR+B34=\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\"># 定</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token string\">\"vm\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"z7pjc00My60=\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token comment\"># 定</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token string\">\"organization\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"eR46sBuqF0fdw7KWFLYa\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\"># 动</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token string\">\"ub\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"mc4K3qTht9Q=\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\"># 定</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token string\">\"zj\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"YXtzSGH4Kx4=\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\"># 定</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token string\">\"tb\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"jbIXAuW9ClU=\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\"># 定</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token string\">\"fp\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"7syw7ja705o=\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\"># 定</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token string\">\"ox\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"AfC9Zsyz+qQ=\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token comment\"># 定</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token string\">\"rr\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"yYCBEY0C7PQ=\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\"># 定</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token string\">\"cn\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"4gX7HfzFoIE=\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\"># 定</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token string\">\"ostype\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"web\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token comment\"># 动</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token string\">\"zs\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"wV0WZb+HzwwOdciC2PHUjh3F4Z88m1vszY3VkYNhbGI=\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token comment\"># 定</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token string\">\"tq\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"O5y0Gz8bnDY=\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token string\">\"act.os\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"web_pc\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token string\">\"rversion\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1.0.1\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>经过分析，上述参数只有 rid,ub,zs 是变化的。</p>\n<ol>\n<li>rid: 上一个命令返回</li>\n<li></li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "http://yida506.github.io/2022/01/09/%E9%AA%8C%E8%AF%81%E7%A0%81/",
            "url": "http://yida506.github.io/2022/01/09/%E9%AA%8C%E8%AF%81%E7%A0%81/",
            "title": "验证码",
            "date_published": "2022-01-09T12:18:41.000Z",
            "content_html": "<h4 id=\"验证码概述\"><a class=\"anchor\" href=\"#验证码概述\">#</a> 验证码概述</h4>\n<p>所谓验证码，就是采取一定的手段，对爬虫采集数据增加一定的难度，要想从 js 端突破这个问题，就需要对验证码的传输过程有一定的了解，这里仍然以 jy 滑块为例。</p>\n<h4 id=\"jy滑块\"><a class=\"anchor\" href=\"#jy滑块\">#</a> JY 滑块</h4>\n<h5 id=\"流程分析\"><a class=\"anchor\" href=\"#流程分析\">#</a> 流程分析</h5>\n<h6 id=\"页面初始化\"><a class=\"anchor\" href=\"#页面初始化\">#</a> 页面初始化</h6>\n<p><img data-src=\"%E9%AA%8C%E8%AF%81%E7%A0%81/image-20220109214733411.png\" alt=\"image-20220109214733411\"></p>\n<p>首先 F12 对网页进行抓包可以看到，这里首先是加载了一个 html 页面，然后加载了 2 个 js，接着，向服务器发送了一个 register 请求，这里的 t 参数是时间戳，然后返回了 gt,challenge 这两个主要参数，然后是 geetype 请求，主要是用于请求 Js, 然后加载了 fullpage 这个 js，之后是向服务器发送了一个 get 请求，这里使用了 gt、challenge、lang、pt、client_type、w、callback，这几个参数。</p>\n<p>其中 callback 后携带了一个时间戳，w 这个参数包含了一系列的加密操作，gt、challenge 这两个参数由之前的 register 请求获取，剩下的可以写死。</p>\n<blockquote>\n<p>此处 w 值主要是通过三个流程：</p>\n<ol>\n<li>u 值：生成随机数作为公钥，对其进行加密。</li>\n<li>l 值：对一个初始对象以及公钥进行组合加密成一个数组</li>\n<li>h 值：对 l 值进行一个处理。</li>\n<li>w=h+u;</li>\n</ol>\n</blockquote>\n<p>然后，这个 get 请求会返回一系列参数其中包含一个 s 参数 (后续会用到)。</p>\n<h6 id=\"提交过程\"><a class=\"anchor\" href=\"#提交过程\">#</a> 提交过程</h6>\n<p>在点击页面的提交按钮的时候，会返回如下数据。</p>\n<p><img data-src=\"%E9%AA%8C%E8%AF%81%E7%A0%81/image-20220109221913141.png\" alt=\"image-20220109221913141\"></p>\n<p>首先提交了一个 ajax 请求，然后，就可以触发下面那个 get.php 请求，就可以获取到包含滑块等数据的包，但是，这个 w 值的加密与上述有所不同。</p>\n<blockquote>\n<ol>\n<li>首先初始化一系列参数，包含对鼠标轨迹初始化的流程、空数组初始化、长字符串生成 (包含时间戳)、随机生成的字符串、大对象 (包含 gt、challenge、aeskey、时间戳、s 等).</li>\n<li>接下来对上述参数进行一系列处理，然后在初始化一个对象 (对象中包含鼠标开始位置数据、鼠标结束数据、显卡类型等一系列参数) 和一个包含时间戳的大字符串。</li>\n<li>将这些参数进行一个拼接，然后使用公钥进行加密，得到 w 值。</li>\n</ol>\n</blockquote>\n<h6 id=\"滑动过程\"><a class=\"anchor\" href=\"#滑动过程\">#</a> 滑动过程</h6>\n<p>​</p>\n<p>滑动滑块，会弹出一个请求，这里的 w 为加密轨迹后的参数。由于进入了另一个 js，所以生成了新的公钥，这里的加密过程与页面初始化的流程一模一样，唯一不同的是这里第二步传入的参数和包含鼠标轨迹，不过多赘述。</p>\n<h5 id=\"轨迹生成\"><a class=\"anchor\" href=\"#轨迹生成\">#</a> 轨迹生成</h5>\n<h4 id=\"顶象滑块\"><a class=\"anchor\" href=\"#顶象滑块\">#</a> 顶象滑块</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tLmFpcmNoaW5hLmNvbS5jbi9hYy9jL2ludm9rZS9yZXNldC9jaGVja1Bob25lQHBn\">https://m.airchina.com.cn/ac/c/invoke/reset/checkPhone@pg</span></p>\n<h4 id=\"数美滑块\"><a class=\"anchor\" href=\"#数美滑块\">#</a> 数美滑块</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueGlhb2hvbmdzaHUuY29tL3dlYi1sb2dpbi9jYXB0Y2hhP3JlZGlyZWN0UGF0aD1odHRwJTNBJTJGJTJGd3d3LnhpYW9ob25nc2h1LmNvbSUyRmRpc2NvdmVyeSUyRml0ZW0lMkY2MDVlYjQ5MjAwMDAwMDAwMjEwMzZhYjU=\">滑块验证 (xiaohongshu.com)</span></p>\n",
            "tags": []
        },
        {
            "id": "http://yida506.github.io/2021/12/26/jy%E6%BB%91%E5%9D%97/",
            "url": "http://yida506.github.io/2021/12/26/jy%E6%BB%91%E5%9D%97/",
            "title": "jy滑块",
            "date_published": "2021-12-26T05:40:25.000Z",
            "content_html": "<h3 id=\"极验滑块\"><a class=\"anchor\" href=\"#极验滑块\">#</a> 极验滑块：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2VldGVzdC5jb20vZGVtby9zbGlkZS1iaW5kLmh0bWw=\">https://www.geetest.com/demo/slide-bind.html</span></p>\n<h4 id=\"登录参数w值\"><a class=\"anchor\" href=\"#登录参数w值\">#</a> 登录参数 w 值</h4>\n<p>F12，点击登录，弹出滑块界面，出现滑块图和背景图，拖动滑块，会发送请求：</p>\n<p>参数如下:gt\\challenge\\w\\callback (其余的貌似不为加密)</p>\n<p>明显，在该请求中生成了这些参数。</p>\n<p>跟值，找到生成参数的位置。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>u <span class=\"token operator\">=</span> r<span class=\"token punctuation\">[</span><span class=\"token function\">$_CAGEe</span><span class=\"token punctuation\">(</span><span class=\"token number\">750</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                  <span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_CAGEe</span><span class=\"token punctuation\">(</span><span class=\"token number\">342</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>gt<span class=\"token punctuation\">[</span><span class=\"token function\">$_CAGEe</span><span class=\"token punctuation\">(</span><span class=\"token number\">209</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span><span class=\"token function\">$_CAGEe</span><span class=\"token punctuation\">(</span><span class=\"token number\">742</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                  <span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> m<span class=\"token punctuation\">[</span><span class=\"token function\">$_CAGEe</span><span class=\"token punctuation\">(</span><span class=\"token number\">733</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                  <span class=\"token punctuation\">,</span> f <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                    <span class=\"token string\">\"\\u0067\\u0074\"</span><span class=\"token operator\">:</span> i<span class=\"token punctuation\">[</span><span class=\"token function\">$_CAGEe</span><span class=\"token punctuation\">(</span><span class=\"token number\">147</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                    <span class=\"token string\">\"\\u0063\\u0068\\u0061\\u006c\\u006c\\u0065\\u006e\\u0067\\u0065\"</span><span class=\"token operator\">:</span> i<span class=\"token punctuation\">[</span><span class=\"token function\">$_CAGDp</span><span class=\"token punctuation\">(</span><span class=\"token number\">154</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token string\">\"\\u006c\\u0061\\u006e\\u0067\"</span><span class=\"token operator\">:</span> o<span class=\"token punctuation\">[</span><span class=\"token function\">$_CAGDp</span><span class=\"token punctuation\">(</span><span class=\"token number\">119</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    <span class=\"token string\">\"\\u0024\\u005f\\u0042\\u0042\\u0046\"</span><span class=\"token operator\">:</span> r<span class=\"token punctuation\">[</span><span class=\"token function\">$_CAGEe</span><span class=\"token punctuation\">(</span><span class=\"token number\">623</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    <span class=\"token string\">\"\\u0063\\u006c\\u0069\\u0065\\u006e\\u0074\\u005f\\u0074\\u0079\\u0070\\u0065\"</span><span class=\"token operator\">:</span> r<span class=\"token punctuation\">[</span><span class=\"token function\">$_CAGEe</span><span class=\"token punctuation\">(</span><span class=\"token number\">648</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token string\">\"\\u0077\"</span><span class=\"token operator\">:</span> h <span class=\"token operator\">+</span> u</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>&quot;\\u0077&quot;：为所需的 w 值。</p>\n<p>下面就需要去寻找其生成逻辑，可以直观的看到，其是由 h,u 拼接而成的。</p>\n<p>接下来就需要分析 u、l、h 的逻辑即可。</p>\n<blockquote>\n<p>首先明确一个观点，这里一定有一个值为定值，因为滑块拖动的轨迹是一定的</p>\n</blockquote>\n<h5 id=\"u值\"><a class=\"anchor\" href=\"#u值\">#</a> u 值</h5>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>u <span class=\"token operator\">=</span> r<span class=\"token punctuation\">[</span><span class=\"token function\">$_CAGEe</span><span class=\"token punctuation\">(</span><span class=\"token number\">750</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>u 运行了一个函数，未传参数进去、直接自执行。经过测试，发现其不为定值。</p>\n<p>内部逻辑：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                <span class=\"token keyword\">var</span> $_CBEDU <span class=\"token operator\">=</span> lTloj<span class=\"token punctuation\">.</span>$_CX</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                  <span class=\"token punctuation\">,</span> $_CBECg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'$_CBEGr'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>$_CBEDU<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                  <span class=\"token punctuation\">,</span> $_CBEEc <span class=\"token operator\">=</span> $_CBECg<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                $_CBECg<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token keyword\">var</span> $_CBEFV <span class=\"token operator\">=</span> $_CBECg<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     <span class=\"token comment\">// 前面属于初始化的步骤</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">X</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_CBEEc</span><span class=\"token punctuation\">(</span><span class=\"token number\">342</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_CBEEc</span><span class=\"token punctuation\">(</span><span class=\"token number\">742</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>e <span class=\"token operator\">||</span> <span class=\"token number\">256</span> <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">[</span><span class=\"token function\">$_CBEEc</span><span class=\"token punctuation\">(</span><span class=\"token number\">182</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    e <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">X</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_CBEDU</span><span class=\"token punctuation\">(</span><span class=\"token number\">342</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_CBEDU</span><span class=\"token punctuation\">(</span><span class=\"token number\">742</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">$_CBEEc</span><span class=\"token punctuation\">(</span><span class=\"token number\">342</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token string\">'encrypt'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_CBEEc</span><span class=\"token punctuation\">(</span><span class=\"token number\">742</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Ot <span class=\"token operator\">=</span> <span class=\"token function\">rt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">var</span> $_CBDIs <span class=\"token operator\">=</span> lTloj<span class=\"token punctuation\">.</span>$_CX</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                  <span class=\"token punctuation\">,</span> $_CBDHp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'$_CBEBa'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>$_CBDIs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                  <span class=\"token punctuation\">,</span> $_CBDJA <span class=\"token operator\">=</span> $_CBDHp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                $_CBDHp<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">var</span> $_CBEAd <span class=\"token operator\">=</span> $_CBDHp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>Ot <span class=\"token operator\">=</span> <span class=\"token function\">rt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                Ot<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">rt</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    \t\t<span class=\"token comment\">// 初始化操作</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">var</span> $_BFBDL <span class=\"token operator\">=</span> lTloj<span class=\"token punctuation\">.</span>$_CX</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>              <span class=\"token punctuation\">,</span> $_BFBCi <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'$_BFBGO'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>$_BFBDL<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>              <span class=\"token punctuation\">,</span> $_BFBEt <span class=\"token operator\">=</span> $_BFBCi<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            $_BFBCi<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">var</span> $_BFBFk <span class=\"token operator\">=</span> $_BFBCi<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">function</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token keyword\">var</span> $_DBFAh <span class=\"token operator\">=</span> lTloj<span class=\"token punctuation\">.</span><span class=\"token function\">$_DP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> $_DBFAh <span class=\"token operator\">!==</span> lTloj<span class=\"token punctuation\">.</span><span class=\"token function\">$_DP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>$_DBFAh<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                    <span class=\"token keyword\">case</span> lTloj<span class=\"token punctuation\">.</span><span class=\"token function\">$_DP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token number\">65536</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">[</span><span class=\"token function\">$_BFBDL</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_BFBDL</span><span class=\"token punctuation\">(</span><span class=\"token number\">396</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_BFBDL</span><span class=\"token punctuation\">(</span><span class=\"token number\">476</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token keyword\">var</span> $_BFBIl <span class=\"token operator\">=</span> lTloj<span class=\"token punctuation\">.</span>$_CX</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                  <span class=\"token punctuation\">,</span> $_BFBHs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'$_BFCBY'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>$_BFBIl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                  <span class=\"token punctuation\">,</span> $_BFBJq <span class=\"token operator\">=</span> $_BFBHs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                $_BFBHs<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token keyword\">var</span> $_BFCAQ <span class=\"token operator\">=</span> $_BFBHs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">65536</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">[</span><span class=\"token string\">'random'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'toString'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'substring'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>首先运行了 rt 函数，接着看 rt 函数内部，内部包含两次初始化操作，貌似没啥用。我们可以看到其中真实的返回值为 4 个 t () 函数运行之和，那么接着我们只需要分析 t 函数即可，</p>\n<p>本质上 t 其实是先通过 random 了一个随机数，然后位运算，在经过 toString、substring 将其转化为一个 4 位字符、接着 4 次拼接，就生成了 16 位随机字符。</p>\n<p>接下来，就就可以还原成如下形式：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">decode_u</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token number\">65536</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">[</span><span class=\"token string\">'random'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'toString'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'substring'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> u_decode <span class=\"token operator\">=</span> <span class=\"token function\">decode_u</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">decode_u</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">decode_u</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">decode_u</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>接下来再看 e 的整体部分</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//$_CBEEc(342) = 'encrypt';</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">X</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_CBEEc</span><span class=\"token punctuation\">(</span><span class=\"token number\">342</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_CBEEc</span><span class=\"token punctuation\">(</span><span class=\"token number\">742</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>e <span class=\"token operator\">||</span> <span class=\"token number\">256</span> <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">[</span><span class=\"token function\">$_CBEEc</span><span class=\"token punctuation\">(</span><span class=\"token number\">182</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                    e <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">X</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_CBEDU</span><span class=\"token punctuation\">(</span><span class=\"token number\">342</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_CBEDU</span><span class=\"token punctuation\">(</span><span class=\"token number\">742</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 还原 e</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">X</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'encrypt'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>u_decode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>while 那部分 e 貌似经过调试也不经过那里，因此可以不用管，将 e 简单的还原，明显，我们只需要知道这个 X () 是啥不就行了吗，从字面意思上来看，就是对随机的 u_decode 的一个加密操作，跟进去：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token constant\">E</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                <span class=\"token keyword\">var</span> $_DBDBL <span class=\"token operator\">=</span> lTloj<span class=\"token punctuation\">.</span><span class=\"token function\">$_DP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> $_DBDBL <span class=\"token operator\">!==</span> lTloj<span class=\"token punctuation\">.</span><span class=\"token function\">$_DP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>$_DBDBL<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                    <span class=\"token keyword\">case</span> lTloj<span class=\"token punctuation\">.</span><span class=\"token function\">$_DP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_HHJn</span><span class=\"token punctuation\">(</span><span class=\"token number\">310</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_HHJn</span><span class=\"token punctuation\">(</span><span class=\"token number\">319</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_HHIO</span><span class=\"token punctuation\">(</span><span class=\"token number\">392</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_HHIO</span><span class=\"token punctuation\">(</span><span class=\"token number\">365</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_HHJn</span><span class=\"token punctuation\">(</span><span class=\"token number\">352</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_HHJn</span><span class=\"token punctuation\">(</span><span class=\"token number\">358</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_HHIO</span><span class=\"token punctuation\">(</span><span class=\"token number\">395</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_HHIO</span><span class=\"token punctuation\">(</span><span class=\"token number\">329</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        <span class=\"token comment\">//$_HHIO(349) = 'setpublic'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_HHIO</span><span class=\"token punctuation\">(</span><span class=\"token number\">349</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token function\">$_HHJn</span><span class=\"token punctuation\">(</span><span class=\"token number\">370</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">$_HHIO</span><span class=\"token punctuation\">(</span><span class=\"token number\">354</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                        $_DBDBL <span class=\"token operator\">=</span> lTloj<span class=\"token punctuation\">.</span><span class=\"token function\">$_DP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// E['prototype']['setpublic']</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token constant\">E</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_HHJn</span><span class=\"token punctuation\">(</span><span class=\"token number\">261</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_HHIO</span><span class=\"token punctuation\">(</span><span class=\"token number\">349</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ut</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">var</span> $_JIId <span class=\"token operator\">=</span> lTloj<span class=\"token punctuation\">.</span>$_CX</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                  <span class=\"token punctuation\">,</span> $_JIHf <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'$_JJBk'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>$_JIId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                  <span class=\"token punctuation\">,</span> $_JIJy <span class=\"token operator\">=</span> $_JIHf<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                $_JIHf<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">var</span> $_JJAX <span class=\"token operator\">=</span> $_JIHf<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> t<span class=\"token punctuation\">[</span><span class=\"token function\">$_JIJy</span><span class=\"token punctuation\">(</span><span class=\"token number\">182</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">[</span><span class=\"token function\">$_JIId</span><span class=\"token punctuation\">(</span><span class=\"token number\">182</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_JIId</span><span class=\"token punctuation\">(</span><span class=\"token number\">310</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token keyword\">var</span> $_JJDX <span class=\"token operator\">=</span> lTloj<span class=\"token punctuation\">.</span>$_CX</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                      <span class=\"token punctuation\">,</span> $_JJCE <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'$_JJGq'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>$_JJDX<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                      <span class=\"token punctuation\">,</span> $_JJEo <span class=\"token operator\">=</span> $_JJCE<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    $_JJCE<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    <span class=\"token keyword\">var</span> $_JJFy <span class=\"token operator\">=</span> $_JJCE<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">y</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_JIJy</span><span class=\"token punctuation\">(</span><span class=\"token number\">319</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> console <span class=\"token operator\">&amp;&amp;</span> console<span class=\"token punctuation\">[</span><span class=\"token function\">$_JIJy</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> console<span class=\"token punctuation\">[</span><span class=\"token function\">$_JIId</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token function\">$_JIId</span><span class=\"token punctuation\">(</span><span class=\"token number\">348</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// E['prototype']['encrypt']</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token constant\">E</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_HHIO</span><span class=\"token punctuation\">(</span><span class=\"token number\">261</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_HHJn</span><span class=\"token punctuation\">(</span><span class=\"token number\">342</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">lt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token keyword\">var</span> $_JJI_ <span class=\"token operator\">=</span> lTloj<span class=\"token punctuation\">.</span>$_CX</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                  <span class=\"token punctuation\">,</span> $_JJHt <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'$_BAABI'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>$_JJI_<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                  <span class=\"token punctuation\">,</span> $_JJJB <span class=\"token operator\">=</span> $_JJHt<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                $_JJHt<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token keyword\">var</span> $_BAAAC <span class=\"token operator\">=</span> $_JJHt<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">e</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                    <span class=\"token keyword\">var</span> $_BAADI <span class=\"token operator\">=</span> lTloj<span class=\"token punctuation\">.</span>$_CX</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                      <span class=\"token punctuation\">,</span> $_BAACi <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'$_BAAGL'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>$_BAADI<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                      <span class=\"token punctuation\">,</span> $_BAAEP <span class=\"token operator\">=</span> $_BAACi<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                    $_BAACi<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                    <span class=\"token keyword\">var</span> $_BAAFA <span class=\"token operator\">=</span> $_BAACi<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">&lt;</span> t<span class=\"token punctuation\">[</span><span class=\"token function\">$_BAAEP</span><span class=\"token punctuation\">(</span><span class=\"token number\">182</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                        <span class=\"token keyword\">return</span> console <span class=\"token operator\">&amp;&amp;</span> console<span class=\"token punctuation\">[</span><span class=\"token function\">$_BAADI</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> console<span class=\"token punctuation\">[</span><span class=\"token function\">$_BAADI</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token function\">$_BAADI</span><span class=\"token punctuation\">(</span><span class=\"token number\">312</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                        <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                      <span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span><span class=\"token function\">$_BAADI</span><span class=\"token punctuation\">(</span><span class=\"token number\">182</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> r <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                        <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span><span class=\"token function\">$_BAADI</span><span class=\"token punctuation\">(</span><span class=\"token number\">137</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                        i <span class=\"token operator\">&lt;</span> <span class=\"token number\">128</span> <span class=\"token operator\">?</span> n<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i <span class=\"token operator\">:</span> <span class=\"token number\">127</span> <span class=\"token operator\">&lt;</span> i <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">2048</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">63</span> <span class=\"token operator\">&amp;</span> i <span class=\"token operator\">|</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                        n<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i <span class=\"token operator\">>></span> <span class=\"token number\">6</span> <span class=\"token operator\">|</span> <span class=\"token number\">192</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">63</span> <span class=\"token operator\">&amp;</span> i <span class=\"token operator\">|</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                        n<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i <span class=\"token operator\">>></span> <span class=\"token number\">6</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">63</span> <span class=\"token operator\">|</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                        n<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i <span class=\"token operator\">>></span> <span class=\"token number\">12</span> <span class=\"token operator\">|</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                    n<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">l</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                      <span class=\"token punctuation\">,</span> s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                        s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">==</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                            o<span class=\"token punctuation\">[</span><span class=\"token function\">$_BAADI</span><span class=\"token punctuation\">(</span><span class=\"token number\">276</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                        n<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                    <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                    n<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                    <span class=\"token keyword\">new</span> <span class=\"token class-name\">y</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_JJJB</span><span class=\"token punctuation\">(</span><span class=\"token number\">310</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_JJI_</span><span class=\"token punctuation\">(</span><span class=\"token number\">353</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token function\">$_JJJB</span><span class=\"token punctuation\">(</span><span class=\"token number\">388</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span><span class=\"token function\">$_JJJB</span><span class=\"token punctuation\">(</span><span class=\"token number\">396</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span> r<span class=\"token punctuation\">[</span><span class=\"token function\">$_JJJB</span><span class=\"token punctuation\">(</span><span class=\"token number\">182</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> r <span class=\"token operator\">:</span> <span class=\"token function\">$_JJJB</span><span class=\"token punctuation\">(</span><span class=\"token number\">44</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>总的来说，对于 u 值的生成有如下几步：</p>\n<ol>\n<li>首先 new 一个 X 对象，其中 X 指向 E ()。</li>\n<li>在 new 的时候，首先获取两个定参数，然后根据两个定参数设置一个 public。</li>\n<li>接着调用原型链上的 encrypt 方法，同时传入了一个 16 位的随机数。</li>\n<li>最后生成 256 位结果。</li>\n</ol>\n<h5 id=\"l值\"><a class=\"anchor\" href=\"#l值\">#</a> l 值</h5>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>l <span class=\"token operator\">=</span> <span class=\"token constant\">V</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"encrypt\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>gt<span class=\"token punctuation\">[</span><span class=\"token string\">\"stringify\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CBFG\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 手动还原</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>r<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CBFG\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 这个会生成一个值，每次刷新都不一样，伪动态，同时跟进去分析发现，这个值其实返回的就是一个一开始初始化的值，逻辑就是 u 值的 Ot, 可改写为 u_decode。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//gt [\"stringify\"](o) 这一部分会返回一个对象，</span></pre></td></tr></table></figure><p>通过对比可以发现 o，传入了一系列参数，这也是导致两次运行结果不一致的主要原因，其中最后生成的 rp 也是一个不一致的参数。</p>\n<p>那么我们主要分析点就是 o 是如何生成的。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>r <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>i <span class=\"token operator\">=</span> r<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CIY\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>o <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>          <span class=\"token string\">\"lang\"</span><span class=\"token operator\">:</span> i<span class=\"token punctuation\">[</span><span class=\"token string\">\"lang\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"zh-cn\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          <span class=\"token string\">\"userresponse\"</span><span class=\"token operator\">:</span> <span class=\"token constant\">H</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">[</span><span class=\"token string\">\"challenge\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token string\">\"passtime\"</span><span class=\"token operator\">:</span> n<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token string\">\"imgload\"</span><span class=\"token operator\">:</span> r<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_BJHF\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token string\">\"aa\"</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token string\">\"ep\"</span><span class=\"token operator\">:</span> r<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CBD_\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在这部分中，我们可以看到，使用了 n、e、t 这三个传进来的参数，貌似看起来和鼠标轨迹有关。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string\">\"$_CGHV\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            r <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_BAHt\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            i <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_BBGR\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            o <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CIY\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            s <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_HA_\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> $t<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CHHW\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"pointerup\"</span> <span class=\"token operator\">!=</span> t<span class=\"token punctuation\">[</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token function\">v</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            o<span class=\"token punctuation\">[</span><span class=\"token string\">\"link\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".link\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CBV\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>              <span class=\"token string\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"_blank\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>              <span class=\"token string\">\"href\"</span><span class=\"token operator\">:</span> o<span class=\"token punctuation\">[</span><span class=\"token string\">\"link\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_BGDK\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_GJD\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lock\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token comment\">//u 生成的位置</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CFDP\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>              _ <span class=\"token operator\">=</span> e <span class=\"token operator\">?</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"lastPoint\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> t<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_BGBX\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> a <span class=\"token operator\">-</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CHJg\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>              c <span class=\"token operator\">=</span> e <span class=\"token operator\">?</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"lastPoint\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"y\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CIAc\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_BGCq\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CECK\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">$_HP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CHIF\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CIBw\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"$_BBBF\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">[</span><span class=\"token string\">\"round\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">[</span><span class=\"token string\">\"round\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CECK\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token keyword\">var</span> u <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>              l <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CIBw\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"$_BBCA\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CIBw\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"$_GEy\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CIY\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CIY\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"s\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          r<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CBCM\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CECK\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_CFGp\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"$_EFJ\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          r<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_DAK\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在这里 n、e、t 分别对应 u、l、n [&quot;$_CECK&quot;]，通过调试可以发现这三个估计分别对应距离、轨迹、时间。</p>\n<h6 id=\"小u\"><a class=\"anchor\" href=\"#小u\">#</a> 小 u:</h6>\n<p>这里的小 u 向上看，由于传进来的 e 为 undefined，所以这里的流程只走向了后面一部分，同时，通过对滑块添加 pointermove 事件发现，这里的 t [&quot;$_BGBX&quot;] 为滑块停止的位置，在经过反复调试后，貌似 a 是个可以写死的东西，最后一项为初始位置，基本上该部分就是计算了一下偏移路径。</p>\n<h6 id=\"小l\"><a class=\"anchor\" href=\"#小l\">#</a> 小 l：</h6>\n<p>根据分析可知，该部分由一个函数传入了三个参数构成，后面两个参数为服务器返回，第一个参数为一个三维数组，第一维为一个 x 轴偏移，第二个为 y 轴偏移，第三个为时间戳偏移。</p>\n<h6 id=\"n_ceck\"><a class=\"anchor\" href=\"#n_ceck\">#</a> n[&quot;$_CECK&quot;]:</h6>\n<p>这项就是个时间戳之差，用结束时间戳减去开始的时间戳。</p>\n<h6 id=\"vencrypt\"><a class=\"anchor\" href=\"#vencrypt\">#</a> V[&quot;encrypt&quot;]</h6>\n<p>这部分可以直接导出。</p>\n<h5 id=\"h值\"><a class=\"anchor\" href=\"#h值\">#</a> h 值</h5>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>h <span class=\"token operator\">=</span> m<span class=\"token punctuation\">[</span><span class=\"token string\">\"$_GFm\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">\"$_GFm\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"$_GDR\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">[</span><span class=\"token string\">\"res\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">[</span><span class=\"token string\">\"end\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>这部分也可直接导出。</p>\n<h5 id=\"ast解混淆\"><a class=\"anchor\" href=\"#ast解混淆\">#</a> AST 解混淆</h5>\n<p>观察代码，我们可以发现，存在大量混淆，增加了阅读难度，所以首先使用 AST 解混淆。</p>\n<p>将代码放入在线网站解析，发现分为 6 块。</p>\n<ol>\n<li>ExpressionStatement</li>\n<li>ExpressionStatement</li>\n<li>ExpressionStatement</li>\n<li>ExpressionStatement</li>\n<li>FunctionDeclaration</li>\n<li>ExpressionStatement</li>\n</ol>\n<blockquote>\n<p>其中前四部分可以看作解密函数，第五部分可以看做一个类似声明对象的过程。与之前解的 OB 混淆原理不太一样，这里面采用了大量的重赋值操作。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> $_DBIV <span class=\"token operator\">=</span> lTloj<span class=\"token punctuation\">.</span>$_CX</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">,</span> $_DBHX <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'$_DCBv'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>$_DBIV<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">,</span> $_DBJB <span class=\"token operator\">=</span> $_DBHX<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$_DBHX<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> $_DCAU <span class=\"token operator\">=</span> $_DBHX<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>我们可以看到，其显示通过一个变量修饰器，将一个解密函数赋值过来，然后通过数组拼合的方式生成了一个新数组，再通过数组取值的操作，将其中的值取出来，接着对数组首元素进行去除，在取值。</p>\n<p>简单来讲，就是把解密函数赋值过去，数组一开始携带的参数貌似没什么用。</p>\n<h6 id=\"step1-ascii码还原\"><a class=\"anchor\" href=\"#step1-ascii码还原\">#</a> STEP1 ASCII 码还原:</h6>\n<p>ASCII 码还原，增加可读性，没啥好讲的。</p>\n<h6 id=\"step2-解密函数部分还原\"><a class=\"anchor\" href=\"#step2-解密函数部分还原\">#</a> STEP2 解密函数部分还原:</h6>\n<p>由于在后面中，存在变量声明调用解密函数的过程，这里为了方便先直接进行一部分替换。</p>\n<p>通过分析我们可以知道，第三个和第四个解密函数，才为真正的解密函数，因为在后续的代码中，很大一部分都是通过该部分才进行了操作，那么我们只需要遍历 MemberExpression 节点，同时限制其父节点为声明表达式即可将遍历条件限定在前几个，然后通过遍历作用域，将有变量赋值的部分替换。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a.b = function ()&#123;return val&#125;;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>var c = a.b;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>转化为</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a.b = function ()&#123;return val&#125;;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>var c = function ()&#123;return val&#125;;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>*/</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> visitor1 <span class=\"token operator\">=</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     <span class=\"token function\">MemberExpression</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>object<span class=\"token punctuation\">,</span>property<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>scope<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> path<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">var</span> func_name <span class=\"token operator\">=</span> object<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>pro_name <span class=\"token operator\">=</span> property<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 只遍历声明式的部分，防止反复调用</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">isAssignmentExpression</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>func_name <span class=\"token operator\">!==</span> func_all<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        path<span class=\"token punctuation\">.</span>scope<span class=\"token punctuation\">.</span><span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>scope<span class=\"token punctuation\">.</span>block<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token function\">MemberExpression</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> func_name <span class=\"token operator\">&amp;&amp;</span> _path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>property<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> property<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                    <span class=\"token comment\">// 对于变量赋值</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">isVariableDeclarator</span><span class=\"token punctuation\">(</span>_path<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                        _path<span class=\"token punctuation\">.</span><span class=\"token function\">replaceInline</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>这一步主要是为后一步生成数组做铺垫。</p>\n</blockquote>\n<h6 id=\"step3-解密函数内存写入\"><a class=\"anchor\" href=\"#step3-解密函数内存写入\">#</a> STEP3 解密函数内存写入:</h6>\n<p>紧接着我们将前 5 部分全部压入内存中，这样的好处就是后面在有调用的部分处，可以直接通过 eval 结合解密函数运行出值，直接用于替换。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 解密函数对象昵称</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> descrypt_strfun_js <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 加入代码</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    descrypt_strfun_js <span class=\"token operator\">+=</span> <span class=\"token function\">generator</span><span class=\"token punctuation\">(</span>ast_code<span class=\"token punctuation\">.</span>program<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>compact<span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>code</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">delete</span> ast_code<span class=\"token punctuation\">.</span>program<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 运行数组</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>descrypt_strfun_js<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h6 id=\"step4-赋值表达式替换\"><a class=\"anchor\" href=\"#step4-赋值表达式替换\">#</a> STEP4 赋值表达式替换:</h6>\n<p>由于后续的针对数组变化的插件需要能将数组写入内存中，而 concat 部分又包含了数组的调用，所以我们要将该部分还原成其原型。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>var b = function ()&#123;return arguments&#125;;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>var a = ['as'].concat (b)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>还原后</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>var a = ['as'].concat (function ()&#123;return arguments&#125;)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>*/</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> var_visitor  <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 查找赋值表达式</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">VariableDeclarator</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>id<span class=\"token punctuation\">,</span> init<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">var</span> binding <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span>scope<span class=\"token punctuation\">.</span><span class=\"token function\">getBinding</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        references <span class=\"token operator\">=</span> binding<span class=\"token punctuation\">.</span>referencePaths<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">isFunctionExpression</span><span class=\"token punctuation\">(</span>init<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> init<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>reference <span class=\"token keyword\">of</span> references<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>reference<span class=\"token punctuation\">.</span>parentPath<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'concat'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                reference<span class=\"token punctuation\">.</span><span class=\"token function\">replaceInline</span><span class=\"token punctuation\">(</span>init<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h6 id=\"step-5-数组还原-临时变量还原\"><a class=\"anchor\" href=\"#step-5-数组还原-临时变量还原\">#</a> STEP 5 数组还原 + 临时变量还原：</h6>\n<p>该部分就是对先前提到的数组进行的还原，临时变量其实指代的也是解密函数。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 变量替换</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> arr_change_visitor <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 数组替换</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">VariableDeclarator</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>id<span class=\"token punctuation\">,</span> init<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">var</span> func_name <span class=\"token operator\">=</span> id<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">var</span> binding <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span>scope<span class=\"token punctuation\">.</span><span class=\"token function\">getBinding</span><span class=\"token punctuation\">(</span>func_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">var</span> referpaths <span class=\"token operator\">=</span> binding<span class=\"token punctuation\">.</span>referencePaths<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 如果变量没引用，则返回</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>referpaths<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 保证变量的 init 部分值唯一，数字、字符类型直接替换，函数定义也可直接替换，前提是引用部分为单引用，若为函数调用，可考虑直接计算值。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 单独针对这种情况，不考虑单纯的数组。</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">isCallExpression</span><span class=\"token punctuation\">(</span>init<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> types<span class=\"token punctuation\">.</span><span class=\"token function\">isArrayExpression</span><span class=\"token punctuation\">(</span>init<span class=\"token punctuation\">.</span>callee<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">// 将数组中的内容直接写入内存</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>init<span class=\"token punctuation\">.</span>callee<span class=\"token punctuation\">.</span>property<span class=\"token punctuation\">.</span>name <span class=\"token operator\">!==</span> <span class=\"token string\">'concat'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">var</span> old_arr <span class=\"token operator\">=</span> init<span class=\"token punctuation\">.</span>callee<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>init<span class=\"token punctuation\">.</span>arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            global<span class=\"token punctuation\">[</span>func_name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> old_arr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// 遍历作用域，获取修改值的地址</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            binding<span class=\"token punctuation\">.</span>scope<span class=\"token punctuation\">.</span><span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>binding<span class=\"token punctuation\">.</span>scope<span class=\"token punctuation\">.</span>block<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token function\">MemberExpression</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token comment\">// 后面可能还要确保只修改一次的情况</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    <span class=\"token comment\">// console.log(_path.toString());</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">.</span>name <span class=\"token operator\">!==</span> func_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>property<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                        <span class=\"token keyword\">let</span> index_value <span class=\"token operator\">=</span> _path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>property<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        _path<span class=\"token punctuation\">.</span><span class=\"token function\">replaceInline</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">[</span>func_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>index_value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token comment\">// 若包含 shift 操作</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>property <span class=\"token operator\">&amp;&amp;</span> _path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>property<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'shift'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        global<span class=\"token punctuation\">[</span>func_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            path<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">// 这部分主要是通过将还原后的部分写入内存，在遍历，接着对包含 shift () 的代码删除，由于该部分的解密体为函数，所以遍历的是 CallExpression 节点。</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">const</span> var_write <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token function\">VariableDeclarator</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>id<span class=\"token punctuation\">,</span>init<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">var</span> binding <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span>scope<span class=\"token punctuation\">.</span><span class=\"token function\">getBinding</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        references <span class=\"token operator\">=</span> binding<span class=\"token punctuation\">.</span>referencePaths<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">isFunctionExpression</span><span class=\"token punctuation\">(</span>init<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> init<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        path<span class=\"token punctuation\">.</span>scope<span class=\"token punctuation\">.</span><span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>scope<span class=\"token punctuation\">.</span>block<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token function\">CallExpression</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>callee<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> id<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                 _path<span class=\"token punctuation\">.</span><span class=\"token function\">replaceInline</span><span class=\"token punctuation\">(</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">valueToNode</span><span class=\"token punctuation\">(</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>_path<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token comment\">// 遍历替换结束，删除原节点</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        path<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token function\">MemberExpression</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>object<span class=\"token punctuation\">,</span>property<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>property<span class=\"token punctuation\">.</span>name <span class=\"token operator\">!==</span> <span class=\"token string\">'shift'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        path<span class=\"token punctuation\">.</span>parentPath<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h6 id=\"step-6-解密函数批量还原\"><a class=\"anchor\" href=\"#step-6-解密函数批量还原\">#</a> STEP 6 解密函数批量还原</h6>\n<p>到了这一步，将解密函数全部运行替换即可。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> visitor_sec <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 遍历 call 节点，将内存中的函数直接计算</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">CallExpression</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>callee<span class=\"token punctuation\">,</span>arguments<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 如果于内存中存在</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>callee<span class=\"token punctuation\">.</span>object <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">[</span>callee<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">[</span>callee<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>callee<span class=\"token punctuation\">.</span>property<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            path<span class=\"token punctuation\">.</span><span class=\"token function\">replaceInline</span><span class=\"token punctuation\">(</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">valueToNode</span><span class=\"token punctuation\">(</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token comment\">// 由于该处的数组是个无限递归，推测该部分应该只是一个用于比较的逻辑，即判断数组下标即可。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">isMemberExpression</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">isMemberExpression</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>parentPath<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    <span class=\"token comment\">// var args1 = path.parent.property.value,args2 = path.parentPath.parent.prototype.value;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    <span class=\"token comment\">//console.log(path.parentPath.parentPath.toString());</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token comment\">//path.replaceInline(types.valueToNode(eval(path.parentPath.parentPath.toString())))</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h6 id=\"step-7-控制流平坦化\"><a class=\"anchor\" href=\"#step-7-控制流平坦化\">#</a> STEP 7 控制流平坦化：</h6>\n<p>通过上述步骤，已经将代码还原到了一个可以阅读的程度了，但是在整体的代码中还包含着一个及其特殊的部分。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">$_BFf</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token keyword\">var</span> $_DAIEJ <span class=\"token operator\">=</span> lTloj<span class=\"token punctuation\">.</span><span class=\"token function\">$_DP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> $_DAIEJ <span class=\"token operator\">!==</span> lTloj<span class=\"token punctuation\">.</span><span class=\"token function\">$_DP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>$_DAIEJ<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token keyword\">case</span> lTloj<span class=\"token punctuation\">.</span><span class=\"token function\">$_DP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>              <span class=\"token string\">\".popup_ghost\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>              <span class=\"token string\">\".popup_box\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token string\">\".popup_header\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                  <span class=\"token string\">\"span.popup_tip\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                  <span class=\"token string\">\"span.popup_close\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token string\">\".popup_wrap\"</span><span class=\"token operator\">:</span> t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>由于 lTloj.$_DP () 这个解密函数解出来是一个无限套娃的玩意，同时，我们可以看到，其在代码流程中好像除了做判断，就没啥用了，也就是说，对于上述函数的流程中，我们只需要关注 case 中的那一部分即可，因为 for 循环貌似给整体加上了个无限循环，但是有 return 的话，就直接跳出去了。</p>\n<blockquote>\n<p>其实还原到这一步了，代码的可读性已经很大程度提高了，其检测了什么环境已经一目了然，接下来就是去补环境了。</p>\n</blockquote>\n<h5 id=\"canvas\"><a class=\"anchor\" href=\"#canvas\">#</a> canvas</h5>\n<p>canvas 为画布，在过验证码的过程中，我们发现服务器没返回图片，而是返回了两张 webp 格式的散乱图，也就是说，在代码中一定存在操作，使得返回的散乱图拼合成一个完整的图片，那么我们首先要做的就是找到其生成参数的位置。</p>\n<blockquote>\n<p>在该例中图片的格式为 312*160</p>\n</blockquote>\n<h6 id=\"step1-观察图片生成原理\"><a class=\"anchor\" href=\"#step1-观察图片生成原理\">#</a> STEP1 观察图片生成原理:</h6>\n<p>在事件断点中打上 canvas 断点，调试，发现该位置貌似是生成参数的位置，观察 l 发现，其 width = 10、height = 80，我们将其 webp 格式的图片打开可以发现，其是将图片划分为了两层，也就是说，这里的操作实际上是对一个 52 块的图片进行一个拼合，而且这里也只循环了 52 次，接下来只需要搞清楚里面在干什么就能对整体进行还原了。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> r <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> _ <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> _ <span class=\"token operator\">&lt;</span> <span class=\"token number\">52</span><span class=\"token punctuation\">;</span> _ <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>       \t\t\t\t\t<span class=\"token comment\">// 这里应该是确定图片位置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                        <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> Ut<span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> <span class=\"token number\">12</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                          <span class=\"token punctuation\">,</span> u <span class=\"token operator\">=</span> <span class=\"token number\">25</span> <span class=\"token operator\">&lt;</span> Ut<span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> a <span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                          <span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> o<span class=\"token punctuation\">[</span><span class=\"token function\">$_CJET</span><span class=\"token punctuation\">(</span><span class=\"token number\">69</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       \t\t\t\t\t<span class=\"token comment\">// 这里是拼图的过程</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                        s<span class=\"token punctuation\">[</span><span class=\"token function\">$_CJET</span><span class=\"token punctuation\">(</span><span class=\"token number\">66</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> _ <span class=\"token operator\">%</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span> <span class=\"token operator\">&lt;</span> _ <span class=\"token operator\">?</span> a <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>目前思路是，先拼上面的 26 张，在拼下面的 26 张，这里的 l 是将分割的图片一个个展示在画布上，c 是 x 轴坐标，u 是 y 轴坐标，a 为 y 轴高度。</p>\n<p>也就是说我们只需要将图片分割后，一快快的按顺序拼起来即可。</p>\n<blockquote>\n<p>这里每一小块的大小为 12 * 80 然后在展示的时候只展示了 10 * 80 的大小，最后拼成一张 260 * 160 的图片，其中展示的顺序与传入的那个数组一样，数组中的值为其对应的位置，左上角为 0，然后 26 代表从左下角开始。</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">//</span>a 为传入的大数组</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>new_img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">260</span><span class=\"token punctuation\">,</span> <span class=\"token number\">160</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> idx <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">#获取当前位置的真实图的区域</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    x <span class=\"token operator\">=</span> _Ge<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> <span class=\"token number\">12</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    y <span class=\"token operator\">=</span> h_sep <span class=\"token keyword\">if</span> a<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">25</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">#图像裁剪</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    img_cut <span class=\"token operator\">=</span> _img<span class=\"token punctuation\">.</span>crop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x <span class=\"token operator\">+</span> w_sep<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> h_sep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   \tnew_x <span class=\"token operator\">=</span> idx <span class=\"token operator\">%</span> <span class=\"token number\">26</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    new_y <span class=\"token operator\">=</span> h_sep <span class=\"token keyword\">if</span> idx <span class=\"token operator\">></span> <span class=\"token number\">25</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">#将真实图回填</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    new_img<span class=\"token punctuation\">.</span>paste<span class=\"token punctuation\">(</span>img_cut<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>new_x<span class=\"token punctuation\">,</span> new_y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h6 id=\"step2-缺口识别\"><a class=\"anchor\" href=\"#step2-缺口识别\">#</a> STEP2 缺口识别：</h6>\n<p>原理上是通过检测二值化的边界，与滑块图进行比对 (代码来源网上)。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''展示圈出来的位置'''</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Show'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    cv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_tran_canny</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"消除噪声\"\"\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    image <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>GaussianBlur<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> cv2<span class=\"token punctuation\">.</span>Canny<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">detect_displacement</span><span class=\"token punctuation\">(</span>img_slider_path<span class=\"token punctuation\">,</span> image_background_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"detect displacement</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    \tparams: img_slider_path 滑块图片</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    \tparmas: image_background_path 带缺口的滑块图片</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    \"\"\"</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># # 参数 0 是灰度模式</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    image <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>img_slider_path<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    template <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>image_background_path<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># 寻找最佳匹配</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    res <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>matchTemplate<span class=\"token punctuation\">(</span>_tran_canny<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> _tran_canny<span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>TM_CCOEFF_NORMED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># 最小值，最大值，并得到最小值，最大值的索引</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    min_val<span class=\"token punctuation\">,</span> max_val<span class=\"token punctuation\">,</span> min_loc<span class=\"token punctuation\">,</span> max_loc <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>minMaxLoc<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    top_left <span class=\"token operator\">=</span> max_loc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 横坐标</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\"># 展示圈出来的区域</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> max_loc  <span class=\"token comment\"># 获取 x,y 位置坐标</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    w<span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 宽高</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    cv2<span class=\"token punctuation\">.</span>rectangle<span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> w<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    show<span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">return</span> top_left</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>top_left <span class=\"token operator\">=</span> detect_displacement<span class=\"token punctuation\">(</span><span class=\"token string\">\"b.png\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a.jpg\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h6 id=\"step3-轨迹模拟\"><a class=\"anchor\" href=\"#step3-轨迹模拟\">#</a> STEP3 轨迹模拟：</h6>\n<p>通过随机数，模拟轨迹。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_random_arr</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    :param num: 图片的路径差</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    :return: 三维数组,x轴,y轴,时间戳</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    '''</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    x_arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    y_arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    time_arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    temp_x <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    temp_y <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    temp_time <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>num<span class=\"token operator\">-</span>i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        temp_x <span class=\"token operator\">+=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        temp_y <span class=\"token operator\">+=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        temp_time <span class=\"token operator\">+=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        x_arr<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>temp_x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        y_arr<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>temp_y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        time_arr<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>temp_time<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        i <span class=\"token operator\">+=</span> temp_x</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>x_arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>y_arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>time_arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x_arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><h4 id=\"初始化页面w值\"><a class=\"anchor\" href=\"#初始化页面w值\">#</a> 初始化页面 w 值</h4>\n<h5 id=\"加密逻辑\"><a class=\"anchor\" href=\"#加密逻辑\">#</a> 加密逻辑</h5>\n<p>咋分析页面的时候，我们发现，整体的流程如下：</p>\n<p>首先访问页面，初始化，生成一个随机数，随机数生成 gt、challage 两个参数，然后通过 fullpage.js 生成 w 值，接着传入 w、gt、challage 获取一串 json (包含初始化以及返回的验证码图片)，接着拖动滑块在在在 slider.js 中获取轨迹参数 w，最终通过校验。</p>\n<p>页面初始化的逻辑只有 l 值不同，因为它传进去的不是轨迹，而是一系列参数。</p>\n<h5 id=\"参数分析\"><a class=\"anchor\" href=\"#参数分析\">#</a> 参数分析</h5>\n<p>逻辑与上面类似。</p>\n<h4 id=\"补充\"><a class=\"anchor\" href=\"#补充\">#</a> 补充</h4>\n",
            "tags": []
        }
    ]
}