{
    "version": "https://jsonfeed.org/version/1",
    "title": "菜b的爬虫记录 • All posts by \"机器学习\" category",
    "description": "",
    "home_page_url": "http://yida506.github.io",
    "items": [
        {
            "id": "http://yida506.github.io/2022/06/01/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%BB%8B%E7%BB%8D/",
            "url": "http://yida506.github.io/2022/06/01/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%BB%8B%E7%BB%8D/",
            "title": "数据挖掘介绍",
            "date_published": "2022-06-01T12:34:27.000Z",
            "content_html": "<h4 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h4>\n",
            "tags": []
        },
        {
            "id": "http://yida506.github.io/2022/03/04/HMM/",
            "url": "http://yida506.github.io/2022/03/04/HMM/",
            "title": "HMM",
            "date_published": "2022-03-04T12:50:02.000Z",
            "content_html": "<h4 id=\"mm\"><a class=\"anchor\" href=\"#mm\">#</a> MM</h4>\n<h6 id=\"markov-model\"><a class=\"anchor\" href=\"#markov-model\">#</a> markov model：</h6>\n<p>马尔可夫模型，指的是在给定当前知识的情况下，过去对于预测未来是无关的，诶个状态的转移，只依赖之前的 n 个状态，被称为是一个 n 阶模型。</p>\n<p><img data-src=\"HMM/image-20220305130113281.png\" alt=\"image-20220305130113281\"></p>\n<h6 id=\"转移矩阵\"><a class=\"anchor\" href=\"#转移矩阵\">#</a> 转移矩阵：</h6>\n<p>指的是从一个状态转移到另一个状态的概率，整体上为一个 n*n 的矩阵</p>\n<h4 id=\"hmm\"><a class=\"anchor\" href=\"#hmm\">#</a> HMM</h4>\n<p>用来描述 含有隐含未知参数的马尔可夫过程。对于投色子来讲，假如有三种色子，分别包含 6 8 10 个面，那么每个色子表现出 1 的概率是不同的，同时，我们还知道色子丢出来的结果到底是几，那么我们就可以用这个结果去反推出对应的值是由哪个色子投出来的。</p>\n<h6 id=\"hidden-state\"><a class=\"anchor\" href=\"#hidden-state\">#</a> HIDDEN STATE:</h6>\n<p>隐藏状态集合</p>\n<h6 id=\"observations-state\"><a class=\"anchor\" href=\"#observations-state\">#</a> Observations state:</h6>\n<p>观测状态集合</p>\n<h6 id=\"start-probability\"><a class=\"anchor\" href=\"#start-probability\">#</a> Start Probability:</h6>\n<p>隐藏状态初始化的概率值</p>\n<h6 id=\"hidden-transition_probability\"><a class=\"anchor\" href=\"#hidden-transition_probability\">#</a> Hidden Transition_Probability:</h6>\n<p>隐藏状态概率转移矩阵</p>\n<h6 id=\"hidden-to-observations-probability\"><a class=\"anchor\" href=\"#hidden-to-observations-probability\">#</a> Hidden to Observations Probability:</h6>\n<p>隐藏状态到观测状态概率集合</p>\n<h5 id=\"viterb算法\"><a class=\"anchor\" href=\"#viterb算法\">#</a> Viterb 算法</h5>\n<p>本质上是动态规划，假设初始状态有 n 种，观测序列的长度为 m，那么总共的路径数就为 m 的 n 次方，要想从中找到最优路径往往是不显示的，但是，对于一段长度为 x 路径来说，要是该路径是最优的，那么其长度为 x-1 的子路径也一定是最优的，那么问题就变为了，根据每一条路径，在其基础上，找到其距下个节点的最优路径即可，这样问题就缩小为了 m*n 个，极大降低了复杂度。</p>\n<h6 id=\"demo以一个看病为例\"><a class=\"anchor\" href=\"#demo以一个看病为例\">#</a> DEMO (以一个看病为例)</h6>\n<p>首先定义了隐藏状态：健康、生病</p>\n<p>观测序列：正常，冷，发烧 (这里指代我们看到的情况)</p>\n<p>初始概率：健康：0.6 生病：0.4</p>\n<p>隐藏状态概率转移矩阵：健康到健康 0.7 健康到生病 0.3 生病到健康 0.4 生病到生病 0.6’</p>\n<p>隐藏状态到观测状态概率集合:</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"Healthy\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"normal\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"cold\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"dizzy\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token property\">\"Fever\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"normal\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"cold\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"dizzy\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>我们要根据观测序列推断出其真实情况，在这里每一条路径都是由上一时刻的状态 X 隐藏状态转移概率矩阵 X 隐藏状态到观测状态概率集合 (这里要针对每一个隐藏状态，因为需要对这个隐藏状态进行解码).</p>\n<p><img data-src=\"HMM/image-20220305170041105.png\" alt=\"image-20220305170041105\"></p>\n<p>python 实现：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Hidden_states <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Healthy\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Fever\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 隐状态集合</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Observations_states <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"normal\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cold\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dizzy\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 观测状态集合</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Start_probability <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token string\">\"Healthy\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">\"Fever\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  <span class=\"token comment\"># 表示病人第一次到访时医生认为其所处的 HMM 状态，他唯一知道的是病人倾向于是健康的（可以理解为这是基于一个对大众身体信息的了解得出的初始状态）</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Hidden_transition_probability <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\"># 隐马尔可夫链中身体状态的状态转移概率，我们能够看到，当天健康的人，第二天有 30% 的概率会发烧</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string\">\"Healthy\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"Healthy\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Fever\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token string\">\"Fever\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"Healthy\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Fever\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Hidden_observations_probability <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\"># 原来叫 emission_probability。这里表示病人每天的感觉的可能性。即，如果他是一个健康人，有 50% 的可能会感觉正常，40% 觉得冷，10% 觉得头晕</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string\">\"Healthy\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"normal\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cold\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dizzy\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token string\">\"Fever\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"normal\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cold\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dizzy\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">viterbi</span><span class=\"token punctuation\">(</span>obs<span class=\"token punctuation\">,</span> states<span class=\"token punctuation\">,</span> start_p<span class=\"token punctuation\">,</span> trans_p<span class=\"token punctuation\">,</span> h2o_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># Viterbi 算法</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    V <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    path <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># Initialize base cases (t == 0)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\"># </span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> states<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        V<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> start_p<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> h2o_p<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>obs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\"># 初始状态，由 start 的概率，对应乘上发射概率，即由隐状态到观测状态的可能性</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        path<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 记录下相应的路径</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\"># Run Viterbi for t > 0，每天都要更新计算一遍</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>obs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        V<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        newpath <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> states<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token comment\"># 对于每个状态，计算其由前一天的各个状态，到达今天的 y 的概率大小，与 y0 自身相比较，取最大值</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token comment\"># 前一天到达今天的每个状态对应的路径大小都计算了，取最大值。作为 V [t][y] 的值，并更新路径</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token comment\"># print('V[t-1]:',V[t-1],'trans_p:',trans_p,'h2o_p[y]:',h2o_p[y],[V[t-1][y0] * trans_p[y0][y] * h2o_p[y][obs[t]] for y0 in states])</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>V<span class=\"token punctuation\">[</span>t<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y0<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> trans_p<span class=\"token punctuation\">[</span>y0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> h2o_p<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>obs<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> y0<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> y0 <span class=\"token keyword\">in</span> states<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>V<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            V<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> prob</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            newpath<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> path<span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token comment\"># Don't need to remember the old paths</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        path <span class=\"token operator\">=</span> newpath</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token comment\"># print(path)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token comment\"># print_dptable(V)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token comment\"># 最后一天</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>V<span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>obs<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> states<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">return</span> viterbi<span class=\"token punctuation\">(</span>Observations_states<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                   Hidden_states<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                   Start_probability<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                   Hidden_transition_probability<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                   Hidden_observations_probability<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h5 id=\"实际案例\"><a class=\"anchor\" href=\"#实际案例\">#</a> 实际案例</h5>\n<p>已知：</p>\n<ul>\n<li>观测序列 (指历年主题比重)</li>\n<li>状态转移矩阵：共现词矩阵 (需要进行一个归一化)</li>\n</ul>\n<p>目的：使用 Baum-Welch 算法，根据 12-21 年的比重，预测 22-25 年的比重</p>\n",
            "tags": []
        },
        {
            "id": "http://yida506.github.io/2022/02/27/%E5%85%B3%E8%81%94%E6%8C%96%E6%8E%98/",
            "url": "http://yida506.github.io/2022/02/27/%E5%85%B3%E8%81%94%E6%8C%96%E6%8E%98/",
            "title": "关联挖掘",
            "date_published": "2022-02-27T08:14:42.000Z",
            "content_html": "<h4 id=\"关联挖掘\"><a class=\"anchor\" href=\"#关联挖掘\">#</a> 关联挖掘</h4>\n<h5 id=\"基本概念\"><a class=\"anchor\" href=\"#基本概念\">#</a> 基本概念</h5>\n<p>频繁项集：n 项的集合。</p>\n<p>支持度：代表 A、B 同时出现的概率，如果概率小，那么说明 A 与 B 的关系不大，如果 A、B 总是同时出现，那么说明他们是相关的。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>s</mi><mi>u</mi><mi>p</mi><mi>p</mi><mi>o</mi><mi>r</mi><mi>t</mi><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mi>U</mi><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">support = P(AUB)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>置信度：包含 A 的数据集中包含 B 的百分比。</p>\n<h5 id=\"apriori算法\"><a class=\"anchor\" href=\"#apriori算法\">#</a> Apriori 算法</h5>\n<p>使用候选项集找频繁项集</p>\n<p>核心思想，只要一个项集是非频繁的，那么包含他的项集就都是非频繁的。</p>\n<h5 id=\"算法实现\"><a class=\"anchor\" href=\"#算法实现\">#</a> 算法实现</h5>\n<p>关联矩阵转布尔矩阵</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data <span class=\"token operator\">=</span> final_data<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">map_func</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span>map_func<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>计算关联规则</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> mlxtend<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> TransactionEncoder</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> mlxtend<span class=\"token punctuation\">.</span>frequent_patterns <span class=\"token keyword\">import</span> apriori</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#利用 Apriori 找出频繁项集</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>freq <span class=\"token operator\">=</span> apriori<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> min_support<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> use_colnames<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#导入关联规则包</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">from</span> mlxtend<span class=\"token punctuation\">.</span>frequent_patterns <span class=\"token keyword\">import</span> association_rules</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#计算关联规则</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>result <span class=\"token operator\">=</span> association_rules<span class=\"token punctuation\">(</span>freq<span class=\"token punctuation\">,</span> metric<span class=\"token operator\">=</span><span class=\"token string\">\"confidence\"</span><span class=\"token punctuation\">,</span> min_threshold<span class=\"token operator\">=</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这里采用最小支持度为 0.1，最小置信度为 0.8</p>\n<p><img data-src=\"%E5%85%B3%E8%81%94%E6%8C%96%E6%8E%98/image-20220227175750485.png\" alt=\"image-20220227175750485\"></p>\n<p>会得到如下 51 项关联规则，其中 support 代表支持度，confidence 代表提升度。</p>\n<p>画图：</p>\n<p><img data-src=\"%E5%85%B3%E8%81%94%E6%8C%96%E6%8E%98/image-20220227175825809.png\" alt=\"image-20220227175825809\"></p>\n",
            "tags": []
        }
    ]
}