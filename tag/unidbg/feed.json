{
    "version": "https://jsonfeed.org/version/1",
    "title": "菜b的爬虫记录 • All posts by \"unidbg\" tag",
    "description": "",
    "home_page_url": "http://yida506.github.io",
    "items": [
        {
            "id": "http://yida506.github.io/2022/08/08/unidbg%E8%A1%A5%E7%8E%AF%E5%A2%83/",
            "url": "http://yida506.github.io/2022/08/08/unidbg%E8%A1%A5%E7%8E%AF%E5%A2%83/",
            "title": "unidbg补环境",
            "date_published": "2022-08-08T04:45:27.000Z",
            "content_html": "<h4 id=\"补环境\"><a class=\"anchor\" href=\"#补环境\">#</a> 补环境</h4>\n<h5 id=\"运行流程\"><a class=\"anchor\" href=\"#运行流程\">#</a> 运行流程</h5>\n<p>对于 unidbg 来讲，整体的运行流程如下：</p>\n<p><strong>构造方法:</strong></p>\n<ul>\n<li>构建模拟器实例</li>\n<li>创建虚拟机</li>\n<li>加载 so</li>\n<li>调用 jni_onload (针对构造方法)</li>\n</ul>\n<p><strong>mian：</strong></p>\n<ul>\n<li>初始化类实例</li>\n<li>调用方法，计算参数</li>\n</ul>\n<p>这样一来，主要的逻辑就在所编写的对应方法中，这样一来，我们只需要针对不同的 native 方法编写对应的逻辑，调用即可。但随之而来了一些问题，比如，依赖了其他的 so 文件，对于使用了 java 层的方法，在 unidbg 中没有实现，在 native 类中调用了其他的静态方法等等。</p>\n<p>对于这些问题，我们就需要手动的补出对应的环境，解决对应的问题。</p>\n<h5 id=\"类型介绍\"><a class=\"anchor\" href=\"#类型介绍\">#</a> 类型介绍</h5>\n<h6 id=\"string\"><a class=\"anchor\" href=\"#string\">#</a> String</h6>\n<p>在 java 中对于字符串类型啥的，都直接通过 String str 声明，但是在 Unidbg 中有所不同</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">StringObject</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> <span class=\"token string\">\"12345\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>跟进去看</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/unidbg%E8%A1%A5%E7%8E%AF%E5%A2%83/image-20220808150043257.png\" alt=\"image-20220808150043257\"></p>\n<p>然后这里也其实就相当于</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">DvmObject</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">.</span><span class=\"token function\">resolveClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java/lang/string\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h6 id=\"byte\"><a class=\"anchor\" href=\"#byte\">#</a> Byte []</h6>\n<p>与 String 类似</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> input <span class=\"token operator\">=</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> inputByte <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">ByteArray</span> inputByteArray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteArray</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span>inputByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h6 id=\"content上下文\"><a class=\"anchor\" href=\"#content上下文\">#</a> Content (上下文)</h6>\n<p>content 类由于 unidbg 中未实现，所以需要手动实现一下</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">DvmObject</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> context <span class=\"token operator\">=</span> vm<span class=\"token punctuation\">.</span><span class=\"token function\">resolveClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android/content/Context\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">newObject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 这里的 newObject 其实就是相当于给 DvmObject 了个 value 原理还是和上述类似  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">DvmObject</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">newObject</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DvmObject</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>这里给 null 主要是因为，这玩意一般是用于计算签名参数，所以给任何值都无所谓，只要在 so 计算签名的时候 patch 掉就行。</p>\n</blockquote>\n<h5 id=\"补环境-2\"><a class=\"anchor\" href=\"#补环境-2\">#</a> 补环境</h5>\n<p>在补环境之前，先把日志打开，这样就可以看到运行流程中的</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>log4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Logger</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DalvikVM</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setLevel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BaseVM</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setLevel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>接下来介绍两种类型的补法：</p>\n<ul>\n<li>普通函数</li>\n</ul>\n<figure class=\"highlight log\"><figcaption data-lang=\"log\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">java.lang.UnsupportedOperationException:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>android<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>ActivityThread<span class=\"token operator\">-</span><span class=\"token operator\">></span>sPackageManager<span class=\"token operator\">:</span>Landroid<span class=\"token operator\">/</span>content<span class=\"token operator\">/</span>pm<span class=\"token operator\">/</span>IPackageManager<span class=\"token operator\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tat com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>unidbg<span class=\"token punctuation\">.</span>linux<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>dvm<span class=\"token punctuation\">.</span>AbstractJni<span class=\"token punctuation\">.</span>getStaticObjectField<span class=\"token operator\">(</span>AbstractJni<span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">103</span><span class=\"token operator\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">/</span><span class=\"token operator\">/</span> 意思是 在运行getStaticObjectField方法时，签名为android<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>ActivityThread<span class=\"token operator\">-</span><span class=\"token operator\">></span>sPackageManager<span class=\"token operator\">:</span>Landroid<span class=\"token operator\">/</span>content<span class=\"token operator\">/</span>pm<span class=\"token operator\">/</span>IPackageManager 不存在</pre></td></tr></table></figure><ul>\n<li>动态函数</li>\n</ul>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/unidbg%E8%A1%A5%E7%8E%AF%E5%A2%83/image-20220808173958950.png\" alt=\"image-20220808173958950\"></p>\n<p>这种的就需要借助 jnitrace</p>\n<p>直接  <code>pip install jnitrace</code></p>\n",
            "tags": [
                "unidbg"
            ]
        },
        {
            "id": "http://yida506.github.io/2022/08/07/weibo%E5%9B%BD%E9%99%85%E7%89%88/",
            "url": "http://yida506.github.io/2022/08/07/weibo%E5%9B%BD%E9%99%85%E7%89%88/",
            "title": "weibo国际版",
            "date_published": "2022-08-07T08:31:29.000Z",
            "content_html": "<h3 id=\"微博国际版app逆向\"><a class=\"anchor\" href=\"#微博国际版app逆向\">#</a> 微博国际版 app 逆向</h3>\n<ul>\n<li>登录参数</li>\n</ul>\n<h4 id=\"抓包\"><a class=\"anchor\" href=\"#抓包\">#</a> 抓包</h4>\n<p>直接用 charles 抓包，可以看到，登录接口主要是 i,s,p 这三个参数携带了加密信息，</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/weibo%E5%9B%BD%E9%99%85%E7%89%88/image-20220807163418474.png\" alt=\"image-20220807163418474\"></p>\n<h4 id=\"静态分析\"><a class=\"anchor\" href=\"#静态分析\">#</a> 静态分析</h4>\n<p>直接用 jadx 打开，直接在 <code>loginmainactivity</code>  中找，最终可以定位到 <code>WeiboSecurityUtils</code> ，这里的 caculateS 就是计算 S 参数的 native 方法。</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/weibo%E5%9B%BD%E9%99%85%E7%89%88/image-20220807164251105.png\" alt=\"image-20220807164251105\"></p>\n<p>接下来直接用 ida 打开</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/weibo%E5%9B%BD%E9%99%85%E7%89%88/image-20220807165257022.png\" alt=\"image-20220807165257022\"></p>\n<p>搜 java 找得到，明显是静态注册</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/weibo%E5%9B%BD%E9%99%85%E7%89%88/image-20220807165939380.png\" alt=\"image-20220807165939380\"></p>\n<p>大致看一下，除了 sub_1C60 这个函数通过 Content 校验了签名外，貌似也没哈特别的逻辑了</p>\n<h4 id=\"unidbg\"><a class=\"anchor\" href=\"#unidbg\">#</a> Unidbg</h4>\n<p>在捋清楚上述的思路后，接下来就只需要做两件事，patch (过掉) sub_1C60 的逻辑，主动调用生成参数</p>\n<p>1C60 的偏移地址可以在 View 界面找到</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/weibo%E5%9B%BD%E9%99%85%E7%89%88/image-20220807172939604.png\" alt=\"image-20220807172939604\"></p>\n<p>然后可以采用 hook 的方式，将这里的 FF F7 EB FE 更换为指令 mov ro,1</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">patchVerify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">int</span> patchCode <span class=\"token operator\">=</span> <span class=\"token number\">0x4FF00100</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//mov r0,1 对应的操作码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        emulator<span class=\"token punctuation\">.</span><span class=\"token function\">getMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pointer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">module</span><span class=\"token punctuation\">.</span>base <span class=\"token operator\">+</span> <span class=\"token number\">0x1E86</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>patchCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>此外，也可以采用 unidbg 自带的 hook 命令</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Pointer</span> pointer <span class=\"token operator\">=</span> <span class=\"token class-name\">UnidbgPointer</span><span class=\"token punctuation\">.</span><span class=\"token function\">pointer</span><span class=\"token punctuation\">(</span>emulator<span class=\"token punctuation\">,</span> <span class=\"token keyword\">module</span><span class=\"token punctuation\">.</span>base <span class=\"token operator\">+</span> <span class=\"token number\">0x1E86</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">assert</span> pointer <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> code <span class=\"token operator\">=</span> pointer<span class=\"token punctuation\">.</span><span class=\"token function\">getByteArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span><span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0xF7</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0xFE</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// BL sub_1C60</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Inspector</span><span class=\"token punctuation\">.</span><span class=\"token function\">inspectString</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> <span class=\"token string\">\"patch32 code=\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Keystone</span> keystone <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Keystone</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">KeystoneArchitecture<span class=\"token punctuation\">.</span>Arm</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">KeystoneMode<span class=\"token punctuation\">.</span>ArmThumb</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token class-name\">KeystoneEncoded</span> encoded <span class=\"token operator\">=</span> keystone<span class=\"token punctuation\">.</span><span class=\"token function\">assemble</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mov r0,1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> patch <span class=\"token operator\">=</span> encoded<span class=\"token punctuation\">.</span><span class=\"token function\">getMachineCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>patch<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!=</span> code<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Inspector</span><span class=\"token punctuation\">.</span><span class=\"token function\">inspectString</span><span class=\"token punctuation\">(</span>patch<span class=\"token punctuation\">,</span> <span class=\"token string\">\"patch32 length=\"</span> <span class=\"token operator\">+</span> patch<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            pointer<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> patch<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> patch<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>最后正常调用即可</p>\n<h4 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h4>\n",
            "tags": [
                "unidbg"
            ]
        },
        {
            "id": "http://yida506.github.io/2022/08/04/meitu/",
            "url": "http://yida506.github.io/2022/08/04/meitu/",
            "title": "meitu",
            "date_published": "2022-08-04T10:23:26.000Z",
            "content_html": "<h3 id=\"美图秀秀\"><a class=\"anchor\" href=\"#美图秀秀\">#</a> 美图秀秀</h3>\n<p>直接用 charles 抓包，加密参数就应该是这个 sig</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/meitu/image-20220804190817096.png\" alt=\"image-20220804190817096\"></p>\n<p>直接搜 sig 返回太多参数，不利于分析，搜 sigVersion</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/meitu/image-20220804191944318.png\" alt=\"image-20220804191944318\"></p>\n<p>看到这里有 generator 的字段，猜测跟生成有关，进一步点进去看，发现最后调用了个 native 方法</p>\n<p>hook 一下，看里面都是些什么东西</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    hook java </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    frida -U -l hook.js com.mt.mtxx.mtxx</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>*/</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">hookso</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Java<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hook start'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">var</span> SigEntity <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.meitu.secret.SigEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token comment\">// 对应 string, byte [] ,string, object</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        SigEntity<span class=\"token punctuation\">.</span>generatorSig<span class=\"token punctuation\">.</span><span class=\"token function\">overload</span><span class=\"token punctuation\">(</span><span class=\"token string\">'java.lang.String'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'[Ljava.lang.String;'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'java.lang.String'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'java.lang.Object'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SigEntity.generatorSig.a: '</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SigEntity.generatorSig.b: '</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SigEntity.generatorSig.c: '</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SigEntity.generatorSig.d: '</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">var</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">generatorSig</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SigEntity.generatorSig.res: '</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>sig<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token function\">setImmediate</span><span class=\"token punctuation\">(</span>hookso<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/meitu/image-20220804212317793.png\" alt=\"image-20220804212317793\"></p>\n<p>参数解释</p>\n<ul>\n<li>a: 可以写死</li>\n<li>b: 时间戳，日期，ip，设备信息等</li>\n<li>c: 固定字符串</li>\n<li>d: 固定信息 (应该是决定数据来源的)</li>\n</ul>\n<blockquote>\n<p>通过观察，这个结果很像 md5，接下来就进去 so 中看逻辑</p>\n</blockquote>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/meitu/image-20220804213410042.png\" alt=\"image-20220804213410042\"></p>\n<p>这里有点骚的是，它把 so 包名隐藏了一下</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/meitu/image-20220804215414627.png\" alt=\"image-20220804215414627\"></p>\n<p>这里有个 generatorSIG，点进去看，发现有 md5</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/meitu/image-20220804215445419.png\" alt=\"image-20220804215445419\"></p>\n<blockquote>\n<p>估计大差不差是 md5 加密了，也可以上 frid</p>\n</blockquote>\n<h4 id=\"unidbg\"><a class=\"anchor\" href=\"#unidbg\">#</a> unidbg</h4>\n<p>直接先跑一下模板</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xiayu<span class=\"token punctuation\">.</span>meituxiuxiu</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>unidbg<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AndroidEmulator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>unidbg<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Emulator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>unidbg<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Module</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>unidbg<span class=\"token punctuation\">.</span>debugger<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BreakPointCallback</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>unidbg<span class=\"token punctuation\">.</span>debugger<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Debugger</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>unidbg<span class=\"token punctuation\">.</span>debugger<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DebuggerType</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>unidbg<span class=\"token punctuation\">.</span>linux<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AndroidEmulatorBuilder</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>unidbg<span class=\"token punctuation\">.</span>linux<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AndroidResolver</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>unidbg<span class=\"token punctuation\">.</span>linux<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>dvm<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>unidbg<span class=\"token punctuation\">.</span>linux<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>dvm<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayObject</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>unidbg<span class=\"token punctuation\">.</span>linux<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>dvm<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ByteArray</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>unidbg<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Memory</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">unicorn<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArmConst</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageDigest</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GetSig_v9080Test</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractJni</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">AndroidEmulator</span> emulator<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Module</span> <span class=\"token keyword\">module</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">VM</span> vm<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> apkPath <span class=\"token operator\">=</span> <span class=\"token string\">\"F:\\\\unidbg\\\\unidbg-android\\\\src\\\\test\\\\java\\\\com\\\\mtxx\\\\meitu.apk\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> soPath2 <span class=\"token operator\">=</span> <span class=\"token string\">\"F:\\\\unidbg\\\\unidbg-android\\\\src\\\\test\\\\java\\\\com\\\\mtxx\\\\librelease_sig.so\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token class-name\">GetSig_v9080Test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        emulator <span class=\"token operator\">=</span> <span class=\"token class-name\">AndroidEmulatorBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">for32Bit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">final</span> <span class=\"token class-name\">Memory</span> memory <span class=\"token operator\">=</span> emulator<span class=\"token punctuation\">.</span><span class=\"token function\">getMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        memory<span class=\"token punctuation\">.</span><span class=\"token function\">setLibraryResolver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AndroidResolver</span><span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        vm <span class=\"token operator\">=</span> emulator<span class=\"token punctuation\">.</span><span class=\"token function\">createDalvikVM</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>apkPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        vm<span class=\"token punctuation\">.</span><span class=\"token function\">setVerbose</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        vm<span class=\"token punctuation\">.</span><span class=\"token function\">setJni</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token class-name\">DalvikModule</span> dm2 <span class=\"token operator\">=</span> vm<span class=\"token punctuation\">.</span><span class=\"token function\">loadLibrary</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>soPath2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        dm2<span class=\"token punctuation\">.</span><span class=\"token function\">callJNI_OnLoad</span><span class=\"token punctuation\">(</span>emulator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">module</span> <span class=\"token operator\">=</span> dm2<span class=\"token punctuation\">.</span><span class=\"token function\">getModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token class-name\">GetSig_v9080Test</span> getSig <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GetSig_v9080Test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        getSig<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            emulator<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>发现抛出缺少 so 文件的错误。</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/meitu/image-20220805134939256.png\" alt=\"image-20220805134939256\"></p>\n<p>直接在构造函数中补上另一个 so</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">DalvikModule</span> dm1 <span class=\"token operator\">=</span> vm<span class=\"token punctuation\">.</span><span class=\"token function\">loadLibrary</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>soPath1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> dm1<span class=\"token punctuation\">.</span><span class=\"token function\">callJNI_OnLoad</span><span class=\"token punctuation\">(</span>emulator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token class-name\">DalvikModule</span> dm2 <span class=\"token operator\">=</span> vm<span class=\"token punctuation\">.</span><span class=\"token function\">loadLibrary</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>soPath2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> dm2<span class=\"token punctuation\">.</span><span class=\"token function\">callJNI_OnLoad</span><span class=\"token punctuation\">(</span>emulator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token keyword\">module</span> <span class=\"token operator\">=</span> dm2<span class=\"token punctuation\">.</span><span class=\"token function\">getModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>接下来直接调用 call 方法</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/meitu/image-20220807212448966.png\" alt=\"image-20220807212448966\"></p>\n<p>点进去，发现其实是少了很多</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DvmObject</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getStaticObjectField</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BaseVM</span> vm<span class=\"token punctuation\">,</span> <span class=\"token class-name\">DvmClass</span> dvmClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> signature<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>signature<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token string\">\"android/app/ActivityThread->sPackageManager:Landroid/content/pm/IPackageManager;\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token keyword\">return</span> vm<span class=\"token punctuation\">.</span><span class=\"token function\">resolveClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android/content/pm/IPackageManager\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">newObject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">getStaticObjectField</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> dvmClass<span class=\"token punctuation\">,</span> signature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>直接方法里加入上述代码，接着运行，又抛出错误，从堆栈中看</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/meitu/image-20220807212842407.png\" alt=\"image-20220807212842407\"></p>\n<p>这里发现，他是这个 dvmClass 类缺少 getSuperclass 方法所导致，点进去</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/meitu/image-20220807213020044.png\" alt=\"image-20220807213020044\"></p>\n<p>可以看到，这里其实是初始化的时候缺少的 (vm.resolveClass</p>\n<p><img data-src=\"http://rfi4er02w.sabkt.gdipper.com/meitu/image-20220807215451155.png\" alt=\"image-20220807215451155\">)</p>\n<p>这里看到，对于传递多个参数，那么这个 superClass 就对应的是 interfaceClasses 中第 0 个</p>\n<p>然后根据调用顺序，这里 <code>GetSuperClass</code>  出问题，归根到底，是上面的 <code>GetStaticObjectField</code>  调用，导致的原生 superClass 不存在所引出的问题，其实也就是我们上一步补的返回值出了点问题。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> vm<span class=\"token punctuation\">.</span><span class=\"token function\">resolveClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android/content/pm/IPackageManager\"</span><span class=\"token punctuation\">,</span>   vm<span class=\"token punctuation\">.</span><span class=\"token function\">resolveClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Landroid/content/pm/IPackageManager\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">newObject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>接下来运行，发现报了个 UnsupportedOperationException 的异常</p>\n",
            "tags": [
                "unidbg"
            ]
        },
        {
            "id": "http://yida506.github.io/2022/05/14/unidbg/",
            "url": "http://yida506.github.io/2022/05/14/unidbg/",
            "title": "unidbg",
            "date_published": "2022-05-14T11:34:31.000Z",
            "content_html": "<h4 id=\"前提纪要\"><a class=\"anchor\" href=\"#前提纪要\">#</a> 前提纪要</h4>\n<p>在 app 加密中，加密逻辑不单单出现在 java 方法中，也有可能出现在 native 方法中，wiki 中介绍，java native interface 是能将 java 代码运行在 jvm 同时可以让其他语言类似 C,C++ 本机调用的方法。</p>\n<p>同时，在 java 代码中会以如下方式出现：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 加载库</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadLibrary</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token namespace\">o00OO<span class=\"token punctuation\">.</span></span>OooO00o<span class=\"token punctuation\">.</span>OooO00o</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">592843821021945178L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 加载 Native 方法</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">native</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sign</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"unidbg介绍\"><a class=\"anchor\" href=\"#unidbg介绍\">#</a> Unidbg 介绍</h4>\n<p>unidbg 是一个基于 unicorn 的逆向工具，可以直接调用 Android 和 iOS 中的  <code>so</code>  文件。项目的 GitHub 地址为 https://github.com/zhkl0228/unidbg。</p>\n<blockquote>\n<p>idea 配好 jdk 即可</p>\n</blockquote>\n<p>本质上是 java 可以调用 c 中的方法，那么只要模拟其方法即可。</p>\n<h4 id=\"unidbg使用\"><a class=\"anchor\" href=\"#unidbg使用\">#</a> Unidbg 使用</h4>\n<p>这里以 https://www.qinless.com/1173 提到的为例，在编写对应 java 代码的时候，我们需要先编写伪方法：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>charset<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> oasis <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">String</span> input1 <span class=\"token operator\">=</span> <span class=\"token string\">\"aid=01A-khBWIm48A079Pz_DMW6PyZR8\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token string\">\"uyTumcCNm4e8awxyC2ANU.&amp;cfrom=28B529501\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token string\">\"0&amp;cuid=5999578300&amp;noncestr=46274W9279Hr1\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token string\">\"X49A5X058z7ZVz024&amp;platform=ANDROID&amp;timestamp\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token string\">\"=1621437643609&amp;ua=Xiaomi-MIX2S__oasis__3.5.8_\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token string\">\"_Android__Android10&amp;version=3.5.8&amp;vid=10190135\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token string\">\"94003&amp;wm=20004_90024\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">Boolean</span> input2 <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        oasis test <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">oasis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">String</span> sign <span class=\"token operator\">=</span> test<span class=\"token punctuation\">.</span><span class=\"token function\">s</span><span class=\"token punctuation\">(</span>input1<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> input2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> barr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Sign\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>就是相当于，先编写一段调用代码，保持与原生 app 调用方法一致，然后将调用 so 的逻辑写进去即可。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">AndroidEmulator</span> emulator<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">VM</span> vm<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Module</span> <span class=\"token keyword\">module</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 补充构造方法，初始化 jni 啥的</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">oasis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 创建模拟器实例，进程名建议依照实际进程名填写，可以规避针对进程名的校验</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        emulator <span class=\"token operator\">=</span> <span class=\"token class-name\">AndroidEmulatorBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">for32Bit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setProcessName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.sina.oasis\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// 获取模拟器的内存操作接口</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">final</span> <span class=\"token class-name\">Memory</span> memory <span class=\"token operator\">=</span> emulator<span class=\"token punctuation\">.</span><span class=\"token function\">getMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 设置系统类库解析</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        memory<span class=\"token punctuation\">.</span><span class=\"token function\">setLibraryResolver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AndroidResolver</span><span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 创建 Android 虚拟机，传入 APK，Unidbg 可以替我们做部分签名校验的工作</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        vm <span class=\"token operator\">=</span> emulator<span class=\"token punctuation\">.</span><span class=\"token function\">createDalvikVM</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unidbg-android\\\\src\\\\test\\\\java\\\\com\\\\lession1\\\\lvzhou.apk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//        vm = emulator.createDalvikVM(null);</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 加载目标 SO</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">DalvikModule</span> dm <span class=\"token operator\">=</span> vm<span class=\"token punctuation\">.</span><span class=\"token function\">loadLibrary</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unidbg-android\\\\src\\\\test\\\\java\\\\com\\\\lession1\\\\liboasiscore.so\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 加载 so 到虚拟内存</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 获取本 SO 模块的句柄，后续需要用它</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">module</span> <span class=\"token operator\">=</span> dm<span class=\"token punctuation\">.</span><span class=\"token function\">getModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        vm<span class=\"token punctuation\">.</span><span class=\"token function\">setJni</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置 JNI</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        vm<span class=\"token punctuation\">.</span><span class=\"token function\">setVerbose</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打印日志</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        dm<span class=\"token punctuation\">.</span><span class=\"token function\">callJNI_OnLoad</span><span class=\"token punctuation\">(</span>emulator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 调用 JNI OnLoad</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>​\t接着修改调用逻辑里的参数</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    \t<span class=\"token comment\">// 使用 List 构建参数列表</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// args list</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// arg1 env</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">.</span><span class=\"token function\">getJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//arg2 jobject/jclazz 一般用不到，直接填 0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// arg3 bytes</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">String</span> input <span class=\"token operator\">=</span> <span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> inputByte <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">ByteArray</span> inputByteArray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteArray</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span>inputByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">.</span><span class=\"token function\">addLocalObject</span><span class=\"token punctuation\">(</span>inputByteArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">//arg4 ,boolean false 填入 0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 参数准备完成</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">//call function 根据地址偏移调用参数 </span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">Number</span> number <span class=\"token operator\">=</span> <span class=\"token keyword\">module</span><span class=\"token punctuation\">.</span><span class=\"token function\">callFunction</span><span class=\"token punctuation\">(</span>emulator<span class=\"token punctuation\">,</span> <span class=\"token number\">0xC365</span><span class=\"token punctuation\">,</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> vm<span class=\"token punctuation\">.</span><span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">intValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>这里的前两个参数 env, obj 一般都不用管，由于这里第三个参数是 byte 数组类型，所以要用 unidbg 内置的 ByteArray 实现，然后用 list 包裹进去，最后 list.toArray 封装</p>\n</blockquote>\n<p>整体框架</p>\n<pre><code class=\"language-JAVA\">package com.lession2;\n\n// 导入通用且标准的类库\nimport com.github.unidbg.linux.android.dvm.AbstractJni;\nimport com.github.unidbg.AndroidEmulator;\nimport com.github.unidbg.Module;\nimport com.github.unidbg.linux.android.AndroidEmulatorBuilder;\nimport com.github.unidbg.linux.android.AndroidResolver;\nimport com.github.unidbg.linux.android.dvm.*;\nimport com.github.unidbg.linux.android.dvm.array.ByteArray;\nimport com.github.unidbg.memory.Memory;\nimport com.lession1.oasis;\n\nimport java.io.File;\n\n// 这里的sina是文件名\npublic class sina extends AbstractJni&#123;\n    private final AndroidEmulator emulator;\n    private final VM vm;\n    private final Module module;\n\n    sina() &#123;\n        // 创建模拟器实例,进程名建议依照实际进程名填写，可以规避针对进程名的校验\n        emulator = AndroidEmulatorBuilder.for32Bit().setProcessName(&quot;com.sina.International&quot;).build();\n        // 获取模拟器的内存操作接口\n        final Memory memory = emulator.getMemory();\n        // 设置系统类库解析\n        memory.setLibraryResolver(new AndroidResolver(23));\n        // 创建Android虚拟机,传入APK，Unidbg可以替我们做部分签名校验的工作\n        vm = emulator.createDalvikVM(new File(&quot;unidbg-android\\\\src\\\\test\\\\java\\\\com\\\\lession2\\\\sinaInternational.apk&quot;));\n        //\n//        vm = emulator.createDalvikVM(null);\n\n        // 加载目标SO\n        DalvikModule dm = vm.loadLibrary(new File(&quot;unidbg-android\\\\src\\\\test\\\\java\\\\com\\\\lession2\\\\libutility.so&quot;), true); // 加载so到虚拟内存\n        //获取本SO模块的句柄,后续需要用它\n        module = dm.getModule();\n        vm.setJni(this); // 设置JNI\n        vm.setVerbose(true); // 打印日志\n        // 样本连JNI OnLoad都没有\n        // dm.callJNI_OnLoad(emulator); // 调用JNI OnLoad\n    &#125;;\n\n    public static void main(String[] args) &#123;\n        sina test = new sina();\n        // 这里调用补充的方法\n    &#125;\n    \n    // 这里补充方法\n&#125;\n</code></pre>\n",
            "tags": [
                "unidbg"
            ]
        }
    ]
}